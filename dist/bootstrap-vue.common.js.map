{"version":3,"file":"bootstrap-vue.common.js","sources":["../lib/components/pagination.vue","../lib/utils/observe-dom.js","../lib/directives/_target.js","../lib/directives/scrollspy.js","../lib/components/alert.vue","../lib/mixins/link.js","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-toolbar.vue","../lib/components/button-group.vue","../lib/mixins/clickout.js","../lib/mixins/dropdown.js","../lib/components/button-group-dropdown.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/components/form-checkbox.vue","../lib/mixins/form-options.js","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/modal.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/nav-text.vue","../lib/components/nav-form.vue","../lib/mixins/popover.js","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["<template>\n    <ul :class=\"['pagination',btnSize]\"\n        role=\"group\"\n        :aria-disabled=\"disabled ? 'true' : 'false'\"\n        :aria-label=\"ariaLabel ? ariaLabel : null\"\n        @focusin.self=\"focusCurrent\"\n        @keydown.left.prevent=\"focusPrev\"\n        @keydown.right.prevent=\"focusNext\"\n        @keydown.shift.left.prevent=\"focusFirst\"\n        @keydown.shift.right.prevent=\"focusLast\"\n    >\n\n        <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n            <span class=\"page-link\">&laquo;</span>\n        </li>\n        <li v-else class=\"page-item\">\n            <a role=\"button\"\n               class=\"page-link\"\n               :aria-label=\"labelPrevPage\"\n               tabindex=\"-1\"\n               href=\"#\"\n               @click.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage - 1)\"\n            ><span aria-hidden=\"true\">&laquo;</span></a>\n        </li>\n\n        <li  v-if=\"showPrev\" class=\"page-item\">\n            <a role=\"button\"\n               :class=\"['page-link', {disabled}, isActive(1)?'active':'']\"\n               :disabled=\"disabled\"\n               :aria-disabled=\"disabled ? 'true' : 'false'\"\n               :aria-label=\"labelPage + ' 1'\"\n               :aria-current=\"isActive(1) ? 'true' : 'false'\"\n               :aria-posinset=\"1\"\n               :aria-setsize=\"numberOfPages\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, 1)\"\n               @keydown.enter.prevent=\"setPage($event, 1)\"\n               @keydown.space.prevent=\"setPage($event, 1)\"\n            >1</a>\n        </li>\n\n        <li v-if=\"showPrev\" class=\"page-item disabled\" role=\"seperator\">\n            <span :class=\"page-link\">&hellip;</span>\n        </li>\n\n        <li class=\"page-item\" v-for=\"_,index in pageLinks\" :key=\"index\">\n            <a role=\"button\"\n               :class=\"['page-link',{disabled},isActive(index + diff)?'active':'',isActive(index + diff)?'':'hidden-xs-down']\"\n               :disabled=\"disabled\"\n               :aria-disabled=\"disabled ? 'true' : 'false'\"\n               :aria-label=\"labelPage + ' ' + (index + diff)\"\n               :aria-current=\"isActive(index + diff) ? 'true' : 'false'\"\n               :aria-posinset=\"index + diff\"\n               :aria-setsize=\"numberOfPages\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, index + diff)\"\n               @keydown.enter.prevent=\"setPage($event, index + diff)\"\n               @keydown.space.prevent=\"setPage($event, index + diff)\"\n            >{{index + diff}}</a>\n        </li>\n\n        <li v-if=\"showNext\" class=\"page-item disabled\" role=\"seperator\">\n            <span class=\"page-link\">&hellip;</span>\n        </li>\n\n        <li class=\"page-item\" v-if=\"showNext\">\n            <a role=\"button\"\n               :class=\"['page-link', {disabled}, isActive(numberOfPages) ? 'active' : '']\"\n               :disabled=\"disabled\"\n               :aria-disabled=\"disabled ? 'true' : 'false'\"\n               :aria-label=\"labelPage + ' ' + numberOfPages\"\n               :aria-current=\"isActive(numberOfPages) ? 'true' : 'false'\"\n               :aria-posinset=\"numberOfPages\"\n               :aria-setsize=\"numberOfPages\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, numberOfPages)\"\n               @keydown.enter.prevent=\"setPage($event, numberOfPages)\"\n               @keydown.space.prevent=\"setPage($event, numberOfPages)\"\n            >{{numberOfPages}}</a>\n        </li>\n\n        <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n            <span class=\"page-link\">&raquo;</span>\n        </li>\n        <li v-else class=\"page-item\">\n            <a role=\"button\"\n               class=\"page-link\"\n               :aria-label=\"labelNextPage\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage + 1)\"\n            ><span aria-hidden=\"true\">&raquo;</span></a>\n        </li>\n\n    </ul>\n</template>\n\n<script>\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n\n    export default {\n        data() {\n            return {\n                diff: 1,\n                showPrev: false,\n                showNext: false,\n                currentPage: this.value\n            };\n        },\n        computed: {\n            numberOfPages() {\n                const result = Math.ceil(this.totalRows / this.perPage);\n                return (result < 1) ? 1 : result;\n            },\n            btnSize() {\n                return this.size ? `pagination-${this.size}` : '';\n            },\n            pageLinks() {\n                if (this.currentPage > this.numberOfPages) {\n                    this.currentPage = 1;\n                }\n\n                // Defaults\n                this.diff = 1;\n                this.showPrev = false;\n                this.showNext = false;\n\n                // If less pages than limit just show this pages\n                if (this.numberOfPages <= this.limit) {\n                    return this.numberOfPages;\n                }\n\n                // If at the beginning of the list\n                if (this.currentPage <= this.limit - 2) {\n                    this.diff = 1;\n                    this.showNext = true;\n                    return this.limit - 2;\n                }\n\n                // If at the end of the list\n                if (this.currentPage > this.numberOfPages - this.limit + 2) {\n                    this.diff = this.numberOfPages - this.limit + 3;\n                    this.showPrev = true;\n                    return this.limit - 2;\n                }\n\n                // Else we are somewhere in the middle\n                this.diff = this.currentPage - 1;\n                this.showPrev = this.currentPage >= this.limit;\n                this.showNext = this.currentPage <= this.numberOfPages - this.limit + 1;\n                return this.limit;\n            }\n        },\n        methods: {\n            isActive(page) {\n                return page === this.currentPage;\n            },\n            setPage(e, num) {\n                if (disabled) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.currentPage = num;\n                this.$nextTick(() => {\n                    // Keep the current button focused if possible\n                    if (isVisible(e.target) && e.target.focus) {\n                        e.target.focus();\n                    } else {\n                        this.focusCurrent();\n                    }\n                });\n                this.$emit('change', this.currentPage);\n            },\n            getButtons() {\n                const buttons = Array.prototype.slice.call(this.$el.querySelectorAll('a.page-link'));\n                // Return only buttons that are visible\n                return buttons.filter(btn => isVisible(btn));\n            },\n            setBtnFocus(btn) {\n                this.$nextTick(() => {\n                    btn.focus();\n                });\n            },\n            focusFirst() {\n                const btn = this.getButtons().find(el => !el.disabled);\n                if (btn && btn.focus && btn !== document.activeElement) {\n                    this.setBtnFocus(btn);\n                }\n            },\n            focusLast() {\n                const btn = this.getButtons().reverse().find(el => !el.disabled);\n                if (btn && btn.focus && btn !== document.activeElement) {\n                    this.setBtnFocus(btn);\n                }\n            },\n            focusCurrent() {\n                const btn = this.getButtons().find(el => parseInt(el.getAttribute('aria-posinset'), 10) === this.currentPage);\n                if (btn && btn.focus) {\n                    this.setBtnFocus(btn);\n                } else {\n                    // Fallback if current page is not in button list\n                    this.focusFirst();\n                }\n            },\n            focusPrev() {\n                const buttons = this.getButtons();\n                const idx = buttons.indexOf(document.activeElement);\n                if (idx > 0 && !buttons[idx - 1].disabled && buttons[idx - 1].focus) {\n                    this.setBtnFocus(buttons[idx - 1]);\n                }\n            },\n            focusNext() {\n                const buttons = this.getButtons();\n                const idx = buttons.indexOf(document.activeElement);\n                const cnt = buttons.length - 1;\n                if (idx < cnt && !buttons[idx + 1].disabled && buttons[idx + 1].focus) {\n                    this.setBtnFocus(buttons[idx + 1]);\n                }\n            },\n            _return() {\n\n            }\n        },\n        watch: {\n            currentPage(newPage, oldPage) {\n                if (newPage === oldPage) {\n                    return;\n                }\n\n                this.$emit('input', newPage);\n            },\n            value(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    this.currentPage = newValue;\n                }\n            }\n        },\n        props: {\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Number,\n                default: 1\n            },\n            limit: {\n                type: Number,\n                default: 3\n            },\n            perPage: {\n                type: Number,\n                default: 20\n            },\n            totalRows: {\n                type: Number,\n                default: 20\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            ariaLabel: {\n                type: String,\n                default: 'Pagination'\n            },\n            labelPrevPage: {\n                type: String,\n                default: 'Previous Page'\n            },\n            labelNextPage: {\n                type: String,\n                default: 'Next Page'\n            },\n            labelPage: {\n                type: String,\n                default: 'Page'\n            }\n        }\n    };\n\n</script>\n\n<style scoped>\n    .page-item.disabled {\n        cursor: not-allowed;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        opacity: .65;\n    }\n</style>\n","/**\n * Observe a DOM element changes, falls back to eventListener mode\n * @param {Element} el The DOM element to observe\n * @param {Function} callback callback to be called on change\n * @param {object} [opts={childList: true, subtree: true}] observe options\n * @see http://stackoverflow.com/questions/3219758\n */\nexport default function observeDOM(el, callback, opts) {\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    const eventListenerSupported = window.addEventListener;\n\n    if (MutationObserver) {\n        // Define a new observer\n        const obs = new MutationObserver(mutations => {\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\n                callback();\n            }\n        });\n\n        // Have the observer observe foo for changes in children\n        obs.observe(el, Object.assign({childList: true, subtree: true}, opts));\n    } else if (eventListenerSupported) {\n        el.addEventListener('DOMNodeInserted', callback, false);\n        el.addEventListener('DOMNodeRemoved', callback, false);\n    }\n}\n","const all_listen_types = {hover: true, click: true, focus: true};\n\nexport default function targets(el, binding, listen_types, fn) {\n    const vm = el.__vue__;\n\n    if (!vm) {\n        console.warn('__vue__ is not available on element', el);\n        return [];\n    }\n\n    const targets = Object.keys(binding.modifiers || {})\n        .filter(t => !all_listen_types[t]);\n\n    if (binding.value) {\n        targets.push(binding.value);\n    }\n\n    const listener = () => {\n        fn({targets, vm});\n    };\n\n    Object.keys(all_listen_types).forEach(type => {\n        if (listen_types[type] || binding.modifiers[type]) {\n            el.addEventListener(type, listener);\n        }\n    });\n    \n    // Return the list of targets\n    return targets;\n}\n","const inBrowser = typeof window !== 'undefined';\nconst isServer = !inBrowser;\n\n/*\n * Pollyfill for Element.closest() for IE :(\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n */\n\nif (inBrowser && window.Element && !Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n        const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n        let el = this;\n        let i;\n        do {\n            i = matches.length;\n            // eslint-disable-next-line no-empty\n            while (--i >= 0 && matches.item(i) !== el) {\n            }\n        } while ((i < 0) && (el = el.parentElement));\n        return el;\n    };\n}\n\n/*\n * Constants / Defaults\n */\n\nconst NAME = 'v-b-scrollspy';\nconst EVENT = 'scrollspy::activate';\nconst BVSS = '__BV_ScrollSpy__';\n\nconst Default = {\n    element: 'body',\n    offset: 10,\n    method: 'auto',\n    throttle: 200\n};\n\nconst DefaultType = {\n    element: '(string|element)',\n    offset: 'number',\n    method: 'string',\n    throttle: 'number'\n};\n\nconst ClassName = {\n    DROPDOWN_ITEM: 'dropdown-item',\n    DROPDOWN_MENU: 'dropdown-menu',\n    DROPDOWN_TOGGLE: 'dropdown-toggle',\n    NAV_LINK: 'nav-link',\n    LIST_ITEM: 'list-group-item',\n    ACTIVE: 'active'\n};\n\nconst Selector = {\n    ACTIVE: '.active',\n    NAV_LIST_GROUP: '.nav, .list-group',\n    NAV: '.nav',\n    LIST_GROUP: '.list-group',\n    NAV_LINKS: '.nav-link',\n    LIST_ITEMS: '.list-group-item',\n    DROPDOWN: '.dropdown',\n    DROPDOWN_ITEMS: '.dropdown-item',\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\n};\n\nconst OffsetMethod = {\n    OFFSET: 'offset',\n    POSITION: 'position'\n};\n\n/*\n * DOM Utility Methods\n */\n\nfunction isElement(obj) {\n    return obj.nodeType;\n}\n\n// Wrapper for Element.closest to emulate jQuery's closest (sorta)\nfunction closest(element, selector) {\n    const el = element.closest(selector);\n    return el === element ? null : el;\n}\n\n// Query Selector All wrapper\nfunction $QSA(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return [];\n    }\n    return Array.prototype.slice.call(element.querySelectorAll(selector));\n}\n\n// Query Selector wrapper\nfunction $QS(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return null;\n    }\n    return element.querySelector(selector) || null;\n}\n\n/*\n * Utility Methods\n */\n\n// Get Vue VM from element\nfunction getVm(el) {\n    return el ? el.__vue__ : null;\n}\n\n// Better var type detection\nfunction toType(obj) {\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n// Check config properties for expected types\nfunction typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n            const expectedTypes = configTypes[property];\n            const value = config[property];\n            const valueType = value && isElement(value) ? 'element' : toType(value);\n\n            if (!new RegExp(expectedTypes).test(valueType)) {\n                console.error(\n                    componentName + ': Option \"' + property + '\" provided type \"' +\n                    valueType + '\" but expected type \"' + expectedTypes + '\"'\n                );\n            }\n        }\n    }\n}\n\n/*\n * ScrollSpy Class\n */\n\nfunction ScrollSpy(el, binding) {\n    // The element that contains the nav-links et al\n    this._$el = el;\n    // The selectors to find the nav-links\n    this._selector = [\n        Selector.NAV_LINKS,\n        Selector.LIST_ITEMS,\n        Selector.DROPDOWN_ITEMS\n    ].join(',');\n    // Start off with default configurtion\n    this._config = Object.assign({}, Default);\n    // Target HREF IDs and their offsets\n    this._offsets = [];\n    this._targets = [];\n    // The currently active target (as an HREF id)\n    this._activeTarget = null;\n    // Curent scroll height (for detecting document height changes)\n    this._scrollHeight = 0;\n    // Reference to the $root VM so we can spew events\n    this._$root = null;\n    // Reference to our throttled resize timeout\n    this._resizeTimeout = null;\n\n    // Process bindings/config\n    this.updateConfig(binding);\n}\n\n/*\n * ScrollSpy Public methods\n */\n\n// Update config\nScrollSpy.prototype.updateConfig = function (binding) {\n    // If Argument, assume element ID\n    if (binding.arg) {\n        // Element ID specified as arg. We must pre-pend #\n        this._config.element = '#' + binding.arg;\n    }\n\n    // Process modifiers\n    Object.keys(binding.modifiers).forEach(val => {\n        if (/^\\d+$/.test(val)) {\n            // Offest value\n            this._config.offset = parseInt(val, 10);\n        } else if (/^(auto|position|offset)$/.test(val)) {\n            // Offset method\n            this._config.method = val;\n        }\n    });\n\n    // Process value\n    if (typeof binding.value === 'string') {\n        // Value is  a CSS ID or selector\n        this._config.element = binding.value;\n    } else if (typeof binding.value === 'number') {\n        // Value is offset\n        this._config.offset = Math.round(binding.value);\n    } else if (typeof binding.value === 'object') {\n        // Value is config object\n        Object.keys(binding.value).filter(k => Boolean(DefaultType[k])).forEach(k => {\n            this._config[k] = binding.value[k];\n        });\n    }\n\n    // Check the config and log error to console. Unknown options are ignored\n    typeCheckConfig(NAME, this._config, DefaultType);\n\n    // Get Vue instance from element\n    const vm = getVm(this._$el);\n    if (vm && vm.$root) {\n        this._$root = vm.$root;\n    }\n\n    return this;\n};\n\n// Turn on event listener\nScrollSpy.prototype.listen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.addEventListener('scroll', this, false);\n        }\n        window.addEventListener('scroll', this, false);\n        window.addEventListener('orientationchange', this, false);\n        window.addEventListener('resize', this, false);\n    }\n\n    return this;\n};\n\n// Turn off event listener\nScrollSpy.prototype.unListen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.removeEventListener('scroll', this, false);\n        }\n        window.removeEventListener('scroll', this, false);\n        window.removeEventListener('orientationchange', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n\n    return this;\n};\n\n// Refresh the positions of the target IDs\nScrollSpy.prototype.refresh = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return this;\n    }\n\n    const autoMethod = scroller.tagName === 'BODY' ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\n    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n    const offsetBase = offsetMethod === OffsetMethod.OFFSET ? 0 : this._getScrollTop();\n\n    this._offsets = [];\n    this._targets = [];\n    this._scrollHeight = this._getScrollHeight();\n\n    // Find all nav link/dropdown/list-item links in our element\n    $QSA(this._selector, this._$el).map(el => {\n        const href = el.getAttribute('href');\n        if (href && href.charAt(0) === '#' && href !== '#' && href.indexOf('#/') === -1) {\n            const target = $QS(href, scroller);\n            if (!target) {\n                return null;\n            }\n            const bcr = target.getBoundingClientRect();\n            if (bcr.width || bcr.height) {\n                return {\n                    offset: (offsetMethod === OffsetMethod.OFFSET ? bcr.top : target.offsetTop) + offsetBase,\n                    href\n                };\n            }\n        }\n        return null;\n    }).filter(\n        item => item\n    ).sort(\n        (a, b) => a.offset - b.offset\n    ).forEach(item => {\n        this._offsets.push(item.offset);\n        this._targets.push(item.href);\n    });\n\n    return this;\n};\n\n// Handle the active target selection\nScrollSpy.prototype.process = function () {\n    if (!this._getScroller) {\n        return this;\n    }\n    const scrollTop = this._getScrollTop() + this._config.offset;\n    const scrollHeight = this._getScrollHeight();\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\n\n    if (this._scrollHeight !== scrollHeight) {\n        this.refresh();\n    }\n\n    if (scrollTop >= maxScroll) {\n        const target = this._targets[this._targets.length - 1];\n        if (this._activeTarget !== target) {\n            this._activate(target);\n        }\n        return this;\n    }\n\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n        this._activeTarget = null;\n        this._clear();\n        return this;\n    }\n\n    for (let i = this._offsets.length; i--;) {\n        const isActiveTarget =\n            this._activeTarget !== this._targets[i] &&\n            scrollTop >= this._offsets[i] &&\n            (this._offsets[i + 1] === undefined ||\n            scrollTop < this._offsets[i + 1]);\n\n        if (isActiveTarget) {\n            this._activate(this._targets[i]);\n        }\n    }\n\n    return this;\n};\n\n// Dispose  of our stuff\nScrollSpy.prototype.dispose = function () {\n    // Ensure we are not listening to events\n    this.unListen();\n\n    // Garbage collection\n    clearTimeout(this._resizeTimeout);\n    this._resizeTimeout = null;\n    this._$el = null;\n    this._config = null;\n    this._selector = null;\n    this._offsets = null;\n    this._targets = null;\n    this._activeTarget = null;\n    this._scrollHeight = null;\n    this._$root = null;\n};\n\n/*\n * ScrollSpy event handler\n */\n\nScrollSpy.prototype.handleEvent = function (e) {\n    const self = this;\n\n    function resizeThrottle() {\n        clearTimeout(this._resizeTimeout);\n        this._resizeTimeout = setTimeout(() => {\n            self.refresh().process();\n        }, self._config.throttle || Default.throttle);\n    }\n\n    if (e.type === 'scroll') {\n        this.process();\n    } else if (e.type === 'orientationchange') {\n        this.refresh().process();\n    } else if (e.type === 'resize') {\n        resizeThrottle();\n    }\n};\n\n/*\n * ScrollSpy private methods\n */\n\n// Get the srolling element\nScrollSpy.prototype._getScroller = function () {\n    if (isServer) {\n        return null;\n    }\n    const scroller = this._config.element;\n    if (!scroller) {\n        return null;\n    }\n    if (scroller && isElement(scroller)) {\n        return scroller;\n    } else if (typeof scroller === 'string') {\n        if (scroller === 'body') {\n            return document.body;\n        }\n        // Otherwise assume CSS selector\n        return $QS(scroller);\n    }\n    return null;\n};\n\n// Return the scroller top position\nScrollSpy.prototype._getScrollTop = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.pageYOffset : scroller.scrollTop;\n};\n\n// Return the scroller height\nScrollSpy.prototype._getScrollHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ?\n        Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) :\n        scroller.scrollHeight;\n};\n\n// Return the scroller offset top position\nScrollSpy.prototype._getOffsetHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.innerHeight : scroller.getBoundingClientRect().height;\n};\n\n// Activate the scrolled in target nav-link\nScrollSpy.prototype._activate = function (target) {\n    this._activeTarget = target;\n    this._clear();\n\n    let queries = this._selector.split(',');\n    queries = queries.map(selector => {\n        return selector + '[href=\"' + target + '\"]';\n    });\n\n    const links = $QSA(queries.join(','), this._$el);\n\n    links.forEach(link => {\n        if (link.classList.contains(ClassName.DROPDOWN_ITEM)) {\n            // This is a dropdown item, so find the .dropdown-toggle and set it's state\n            const dropdown = closest(link, Selector.DROPDOWN);\n            if (dropdown) {\n                const toggle = $QS(Selector.DROPDOWN_TOGGLE, dropdown);\n                if (toggle) {\n                    this._setActiveState(toggle, true);\n                }\n            }\n            // Also set this link's state\n            this._setActiveState(link, true);\n        } else {\n            // Set triggered link as active\n            this._setActiveState(link, true);\n            // Set triggered links parents as active\n            // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n            // Handle parent .nav's and .list-group's\n            this._setParentsSiblingActiveState(link, Selector.NAV_LIST_GROUP, [ClassName.NAV_LINK, ClassName.LIST_ITEM], true);\n        }\n    });\n\n    // Signal event to root, passing ID of target\n    if (links && links.length > 0 && this._$root && this._$root.$emit) {\n        this._$root.$emit(EVENT, target);\n    }\n};\n\n// Clear the 'active' targets in our nav component\nScrollSpy.prototype._clear = function () {\n    $QSA(this._selector, this._$el).filter(el => {\n        if (el.classList.contains(ClassName.ACTIVE)) {\n            const href = el.getAttribute('href');\n            if (href.charAt(0) !== '#' || href.indexOf('#/') === 0) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }).forEach(el => {\n        this._setActiveState(el, false);\n    });\n};\n\n// Set the active state. if el has a vue insatnce then try setting the active prop,\n// Else fallback to adding the active class\nScrollSpy.prototype._setActiveState = function (el, state) {\n    if (el) {\n        if (el.classList.contains(ClassName.NAV_LINK) && !el.classList.contains(ClassName.DROPDOWN_TOGGLE)) {\n            // Special case where VM with 'active' prop is on parent element\n            el = el.parentElement;\n        }\n        const vm = getVm(el);\n        if (vm && Object.prototype.hasOwnProperty.call(vm.$props, 'active')) {\n            // This is a component that has an `active` prop\n            vm.$props.active = state;\n        } else {\n            // Fallback to setting class attribute since item doesn't have an 'active' prop\n            el.classList[state ? 'add' : 'remove'](ClassName.ACTIVE);\n        }\n    }\n};\n\n// Find all the matching parents given a CSS selector, then find previous sibling that matches the supplied classes\n// And then set the active state on each immediate previous sibling of the parent(s)\nScrollSpy.prototype._setParentsSiblingActiveState = function (element, selector, classes, state) {\n    if (!classes) {\n        return;\n    }\n    if (!Array.isArray(classes)) {\n        classes = [classes];\n    }\n    let el = element;\n    while (el) {\n        el = closest(el, selector);\n        if (el && el.previousElementSibling) {\n            for (let i = 0; i < classes.length - 1; i++) {\n                if (el.previousElementSibling.classList.contains(classes[i])) {\n                    this._setActiveState(el, state);\n                }\n            }\n        }\n    }\n};\n\n/*\n * Export our directive\n */\n\nexport default {\n    bind(el, binding) {\n        if (isServer || el[BVSS]) {\n            return;\n        }\n        el[BVSS] = new ScrollSpy(el, binding);\n    },\n    inserted(el, binding) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        el[BVSS].updateConfig(binding).listen().refresh().process();\n    },\n    update(el, binding) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        el[BVSS].updateConfig(binding).refresh().process();\n    },\n    componentUpdated(el, binding) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        el[BVSS].updateConfig(binding).refresh().process();\n    },\n    unbind(el) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        // Remove scroll event listener on scrollElId\n        el[BVSS].unListen().dispose();\n        el[BVSS] = null;\n    }\n};\n","<template>\n    <div v-if=\"localShow\"\n         :class=\"classObject\"\n         role=\"alert\"\n         aria-live=\"polite\"\n         aria-atomic=\"true\"\n    >\n        <button type=\"button\"\n                class=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"dismissLabel\"\n                v-if=\"dismissible\"\n                @click.stop.prevent=\"dismiss\"\n        >\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                countDownTimerId: null,\n                dismissed: false\n            };\n        },\n        created() {\n            if (this.state) {\n                console.warn('<b-alert> \"state\" property is deprecated, please use \"variant\" property instead.');\n            }\n        },\n        computed: {\n            classObject() {\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\n            },\n            alertVariant() {\n                const variant = this.state || this.variant || 'info';\n                return `alert-${variant}`;\n            },\n            localShow() {\n                return !this.dismissed && (this.countDownTimerId || this.show);\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'info'\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            dismissible: {\n                type: Boolean,\n                default: false\n            },\n            dismissLabel: {\n                type: String,\n                default: 'Close'\n            },\n            show: {\n                type: [Boolean, Number],\n                default: false\n            }\n        },\n        watch: {\n            show() {\n                this.showChanged();\n            }\n        },\n        mounted() {\n            this.showChanged();\n        },\n        methods: {\n            dismiss() {\n                this.dismissed = true;\n                this.$emit('dismissed');\n                this.clearCounter();\n            },\n            clearCounter() {\n                if (this.countDownTimerId) {\n                    clearInterval(this.countDownTimerId);\n                }\n            },\n            showChanged() {\n                // Reset dismiss status\n                this.dismissed = false;\n\n                // No timer for boolean values\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\n                    return;\n                }\n\n                let dismissCountDown = this.show;\n                this.$emit('dismiss-count-down', dismissCountDown);\n\n                // Start counter\n                this.clearCounter();\n                this.countDownTimerId = setInterval(() => {\n                    if (dismissCountDown < 2) {\n                        return this.dismiss();\n                    }\n                    dismissCountDown--;\n                    this.$emit('dismiss-count-down', dismissCountDown);\n                }, 1000);\n            }\n        }\n    };\n</script>\n","// Props compatible with vue-router\n// https://github.com/vuejs/vue-router/blob/dev/src/components/link.js\n\nexport default {\n    computed: {\n        isRouterLink() {\n            return Boolean(this.$router && this.to && !this.disabled);\n        },\n        _href() {\n            if (this.disabled) {\n                return '#';\n            }\n\n            // If href explicitly provided\n            if (this.href) {\n                return this.href;\n            }\n\n            // Fallback to `to` prop\n            if (this.to && typeof this.to === 'string') {\n                return this.to;\n            }\n        },\n        computedRel() {\n            if (this.target === '_blank' && this.rel === null) {\n                return 'noopener';\n            }\n            return this.rel || null;\n        },\n        linkClassObject() {\n            return [\n                this.active ? (this.exact ? this.exactActiveClass : this.activeClass) : null,\n                this.disabled ? 'disabled' : null\n            ];\n        }\n    },\n    props: {\n        active: {\n            type: Boolean,\n            default: false\n        },\n\n        disabled: Boolean,\n\n        href: {\n            type: String,\n            default: '#'\n        },\n\n        target: {\n            type: String,\n            default: '_self'\n        },\n\n        rel: {\n            type: String,\n            default: null\n        },\n\n        to: {\n            type: [String, Object],\n            default: null\n        },\n\n        tag: {\n            type: String,\n            default: 'a'\n        },\n\n        exact: Boolean,\n\n        append: Boolean,\n\n        replace: Boolean,\n\n        activeClass: {\n            type: String,\n            default: 'active'\n        },\n\n        exactActiveClass: {\n            type: String,\n            default: 'active'\n        },\n\n        event: {\n            type: [String, Array],\n            default: 'click'\n        }\n    },\n    methods: {\n        linkClick(e) {\n            if (!this.disabled) {\n                this.$root.$emit('clicked::link', this);\n                this.$emit('click', e);\n            } else {\n                e.stopPropagation();\n            }\n\n            if (!this.isRouterLink && this._href === '#') {\n                // stop scroll-to-top behavior\n                e.preventDefault();\n            }\n        }\n    }\n};\n","<template>\n    <!-- When VueRouter is available -->\n    <a v-if=\"isRouterLink\"\n       is=\"router-link\"\n       :active-class=\"activeClass\"\n       :exact-active-class=\"exactActiveClass\"\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :to=\"to\"\n       :exact=\"exact\"\n       :append=\"append\"\n       :replace=\"replace\"\n       :event=\"event\"\n       :tag=\"tag\"\n       :class=\"linkClassObject\"\n       @click=\"linkClick\"\n    >\n        <slot></slot>\n    </a>\n\n    <!-- Fallback mode -->\n    <a v-else\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :href=\"_href\"\n       :target=\"target || null\"\n       :rel=\"computedRel\"\n       :class=\"linkClassObject\"\n       @click=\"linkClick\"\n    >\n        <slot></slot>\n    </a>\n</template>\n\n<script>\n    import linkMixin from '../mixins/link';\n\n    export default {\n        mixins: [linkMixin]\n    };\n</script>\n","<template>\n    <ol class=\"breadcrumb\">\n        <li v-for=\"(item, idx) in normalizedItems\"\n            :class=\"['breadcrumb-item', item.active ? 'active' : null]\"\n            @click=\"onClick(item)\"\n            role=\"presentation\"\n        >\n            <span v-if=\"item.active\"\n                  :aria-current=\"ariaCurrent\"\n                  v-html=\"item.text\"></span>\n            <b-link v-else\n                    :to=\"item.to\"\n                    :href=\"item.href || item.link\"\n                    v-html=\"item.text\"></b-link>\n        </li>\n        <slot></slot>\n    </ol>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    export default {\n        components: { bLink },\n        computed: {\n            componentType() {\n                return this.to ? 'router-link' : 'a';\n            },\n            normalizedItems() {\n                let userDefinedActive = false;\n                const originalItemsLength = this.items.length;\n\n                return this.items.map((item, index) => {\n                    // if no active state is defined,\n                    // default to the last item in the array as active\n                    const isLast = index === originalItemsLength - 1;\n\n                    // nothing defined except the text\n                    if (typeof item === 'string') {\n                        return { text: item, link: '#', active: isLast };\n                    }\n\n                    // don't default the active state if given a boolean value,\n                    // or if a user defined value has already been given\n                    if (item.active !== true && item.active !== false && !userDefinedActive) {\n                        item.active = isLast;\n                    } else if (item.active) {\n                        // here we know we've been given an active value,\n                        // so we won't set a default value\n                        userDefinedActive = true;\n                    }\n\n                    return item;\n                });\n            }\n        },\n        props: {\n            items: {\n                type: Array,\n                default: () => [],\n                required: true\n            },\n            ariaCurrent: {\n                type: String,\n                default: 'location'\n            }\n        },\n        methods: {\n            onClick(item) {\n                this.$emit('click', item);\n            }\n        }\n    };\n</script>\n","<template>\n    <button :class=\"classList\"\n            :is=\"componentType\"\n            :to=\"to\"\n            :href=\"href\"\n            :rel=\"rel\"\n            :target=\"target\"\n            @click=\"onclick\"\n            :disabled=\"disabled\"\n    >\n        <slot></slot>\n    </button>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    export default {\n        components: {bLink},\n        computed: {\n            classList() {\n                return [\n                    'btn',\n                    this.btnVariant,\n                    this.btnSize,\n                    this.btnBlock,\n                    this.btnDisabled\n                ];\n            },\n            componentType() {\n                return (this.href || this.to) ? 'b-link' : 'button';\n            },\n            btnBlock() {\n                return this.block ? `btn-block` : '';\n            },\n            btnVariant() {\n                return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n            },\n            btnSize() {\n                return this.size ? `btn-${this.size}` : '';\n            },\n            btnDisabled() {\n                return this.disabled ? 'disabled' : '';\n            }\n        },\n        props: {\n            block: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            to: {\n                type: [String, Object]\n            },\n            href: {\n                type: String\n            },\n            target: {\n                type: String\n            },\n            rel: {\n                type: String\n            }\n        },\n        methods: {\n            onclick(e) {\n                if (this.disabled) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                } else {\n                    this.$emit('click', e);\n                }\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"classObject\"\n         role=\"toolbar\"\n         :tabindex=\"keyNav ? '0' : null\"\n         @focusin.self=\"focusFirst\"\n         @keydown.left=\"focusNext($event,true)\"\n         @keydown.up=\"focusNext($event,true)\"\n         @keydown.right=\"focusNext($event,false)\"\n         @keydown.down=\"focusNext($event,false)\"\n         @keydown.shift.left=\"focusFirst($event)\"\n         @keydown.shift.up=\"focusFirst($event)\"\n         @keydown.shift.right=\"focusLast($event)\"\n         @keydown.shift.down=\"focusLast($event)\"\n    >\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    const ITEM_SELECTOR = [\n        '.btn:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        '.form-control:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'select:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'input[type=\"checkbox\"]:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'input[type=\"radio\"]:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])'\n    ].join(',');\n\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-toolbar',\n                    (this.justify && !this.vertical) ? 'justify-content-between' : ''\n                ];\n            }\n        },\n        props: {\n            justify: {\n                type: Boolean,\n                default: false\n            },\n            KeyNav: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            setItemFocus(item) {\n                this.$nextTick(() => {\n                    item.focus();\n                });\n            },\n            focusNext(e, prev) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (prev && index > 0) {\n                    index--;\n                } else if (!prev && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.setItemFocus(items[index]);\n            },\n            focusFirst(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus(items[0]);\n                }\n            },\n            focusLast(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus([items.length - 1]);\n                }\n            },\n            getItems() {\n                const items = Array.prototype.slice.call(this.$el.querySelectorAll(ITEM_SELECTOR));\n                items.forEach(item => {\n                    // Ensure tabfocus is -1 on any new elements\n                    item.tabIndex = -1;\n                });\n                return items;\n            }\n        },\n        mounted() {\n            if (this.keyNav) {\n                // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\n                this.getItems();\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"classObject\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-group',\n                    this.vertical ? 'btn-group-vertical' : '',\n                    (this.justify && !this.vertical) ? 'justify-content-between' : '',\n                    this.size ? ('btn-group-' + this.size) : ''\n                ];\n            }\n        },\n        props: {\n            vertical: {\n                type: Boolean,\n                default: false\n            },\n            justify: {\n                type: Boolean,\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","const ITEM_SELECTOR = '.dropdown-item:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])';\nconst HEADER_SELECTOR = '.dropdown-header:not([style*=\"display: none\"]):not([style*=\"display:none\"])';\nconst ALL_SELECTOR = [ITEM_SELECTOR, HEADER_SELECTOR].join(',');\n\nexport default {\n    props: {\n        split: {\n            type: Boolean,\n            default: false\n        },\n        text: {\n            type: String,\n            default: ''\n        },\n        dropup: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        right: {\n            type: Boolean,\n            default: false\n        }\n    },\n    created() {\n        const listener = el => {\n            if (el !== this) {\n                this.visible = false;\n            }\n        };\n\n        // To keep one dropdown opened on page\n        this.$root.$on('shown::dropdown', listener);\n\n        // Hide when clicked on links\n        this.$root.$on('clicked::link', listener);\n    },\n    watch: {\n        visible(state, old) {\n            if (state === old) {\n                return; // Avoid duplicated emits\n            }\n\n            if (state) {\n                this.$root.$emit('shown::dropdown', this);\n                /*\n                 If this is a touch-enabled device we add extra\n                 empty mouseover listeners to the body's immediate children;\n                 only needed because of broken event delegation on iOS\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n                 */\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\n                    const children = Array.prototype.slice.call(document.body.children);\n                    children.forEach(el => {\n                        el.addEventListener('mouseover', this.noop);\n                    });\n                }\n            } else {\n                this.$root.$emit('hidden::dropdown', this);\n                /*\n                 If this is a touch-enabled device we remove the extra\n                 empty mouseover listeners we added for iOS support\n                 */\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\n                    const children = Array.prototype.slice.call(document.body.children);\n                    children.forEach(el => {\n                        el.removeEventListener('mouseover', this.noop);\n                    });\n                }\n            }\n        }\n    },\n    methods: {\n        noop() {\n            // Do nothing event handler (used in visible watch)\n        },\n        toggle() {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            this.visible = !this.visible;\n            if (this.visible) {\n                this.$nextTick(function () {\n                    // Focus first visible non-disabled item\n                    let item = this.getFirstItem();\n                    if (item) {\n                        this.focusItem(0, [item]);\n                    }\n                });\n            }\n        },\n        onTab() {\n            if (this.visible) {\n                this.visible = false;\n            }\n        },\n        onEsc(e) {\n            if (this.visible) {\n                this.visible = false;\n                e.preventDefault();\n                e.stopPropagation();\n                this.$nextTick(function () {\n                    // Return focus to original trigger button\n                    let el;\n                    if (this.split && this.$refs.toggle) {\n                        el = this.$refs.toggle.$el || this.$refs.toggle;\n                    } else {\n                        el = this.$refs.button.$el || this.$refs.button;\n                    }\n                    if (el && el.focus) {\n                        el.focus();\n                    }\n                });\n            }\n        },\n        focusNext(e, up) {\n            if (!this.visible) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            const items = this.getItems();\n            if (items.length < 1) {\n                return;\n            }\n            let index = items.indexOf(e.target);\n            if (up && index > 0) {\n                index--;\n            } else if (!up && index < items.length - 1) {\n                index++;\n            }\n            if (index < 0) {\n                index = 0;\n            }\n            this.focusItem(index, items);\n        },\n        focusHovered(e) {\n            if (!this.visible) {\n                return;\n            }\n            const items = this.getItems();\n            if (items.length < 1) {\n                return;\n            }\n            const index = items.indexOf(e.target);\n            if (index > -1) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.focusItem(index, items);\n            }\n        },\n        focusItem(idx, items) {\n            items.forEach((el, i) => {\n                if (i === idx) {\n                    el.classList.add('active');\n                    el.focus();\n                } else {\n                    el.classList.remove('active');\n                }\n            });\n        },\n        getItems() {\n            // Get all items and headers\n            return Array.prototype.slice.call(this.$refs.menu.querySelectorAll(ALL_SELECTOR));\n        },\n        getFirstItem() {\n            // Get the first non-header non-disabled item\n            let item = this.$refs.menu.querySelector(ITEM_SELECTOR);\n            if (!item) {\n                // If no items then try a header\n                item = this.$refs.menu.querySelector(HEADER_SELECTOR);\n            }\n            return item || null;\n        }\n    }\n};\n","<template>\n    <div :id=\"id || null\" :class=\"['btn-group','dropdown', {dropup, show: visible}]\">\n\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\n                  ref=\"button\"\n                  :id=\"id ? (id + '__BV_button_') : null\"\n                  :aria-expanded=\"visible ? 'true' : 'false'\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"click\"\n                  @kedown.space.stop.prevent=\"click\"\n                  @kedown.enter.stop.prevent=\"click\"\n        >\n            <slot name=\"text\">{{text}}</slot>\n        </b-button>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             role=\"menu\"\n             ref=\"menu\"\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n             @mouseover=\"focusHovered($event)\"\n        >\n            <slot></slot>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import clickOut from '../mixins/clickout';\n    import dropdown from '../mixins/dropdown';\n\n    export default {\n        mixins: [\n            clickOut,\n            dropdown\n        ],\n        data() {\n            return {\n                visible: false\n            };\n        },\n        computed: {\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            }\n        },\n        methods: {\n            clickOutListener() {\n                this.visible = false;\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"classObject\" role=\"group\">\n        <slot name=\"left\">\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\n        </slot>\n\n        <slot></slot>\n\n        <slot name=\"right\">\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\n        </slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'input-group',\n                    this.size ? ('input-group-' + this.size) : '',\n                    this.state ? ('has-' + this.state) : ''\n                ];\n            }\n        },\n        props: {\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            left: {\n                type: String,\n                default: null\n            },\n            right: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-addon\" :id=\"id || null\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-btn\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card',cardVariant,cardAlign,cardInverse]\">\n        <!-- Card Image Slot-->\n        <slot name=\"img\" ref=\"img\">\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\n        </slot>\n\n        <!-- Card Header-->\n        <component v-if=\"header || $slots['header']\"\n                   :is=\"headerTag\"\n                   :class=\"['card-header', headerVariant?('bg-'+headerVariant):'', headerClass]\"\n        >\n            <slot name=\"header\">\n                <div v-html=\"header\"></div>\n            </slot>\n        </component>\n\n        <!--Show custom block when no-block prop is set-->\n        <template v-if=\"noBlock\">\n            <slot></slot>\n        </template>\n\n        <!-- Card Standard Blocks-->\n        <div :class=\"blockClass\" v-else>\n            <h4 v-if=\"title\" class=\"card-title\" v-html=\"title\"></h4>\n            <h6 v-if=\"subTitle\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\n            <slot></slot>\n        </div>\n\n        <!-- Card Footer-->\n        <component v-if=\"footer || $slots['footer']\"\n                   :is=\"footerTag\"\n                   :class=\"['card-footer', footerVariant?('bg-'+footerVariant):'', footerClass]\"\n        >\n            <slot name=\"footer\">\n                <div v-html=\"footer\"></div>\n            </slot>\n        </component>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            blockClass() {\n                return [\n                    'card-block',\n                    this.overlay ? 'card-img-overlay' : null\n                ];\n            },\n            cardVariant() {\n                return this.variant ? `card-${this.variant}` : null;\n            },\n            cardInverse() {\n                if (this.overlay || this.inverse) {\n                    return 'card-inverse';\n                }\n                // Auto inverse colored cards\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\n                    this.variant.indexOf('outline') === -1) {\n                    return 'card-inverse';\n                }\n            },\n            cardAlign() {\n                return this.align ? `text-${this.align}` : null;\n            }\n        },\n        props: {\n            align: {\n                type: String,\n                default: null\n            },\n            inverse: {\n                type: Boolean,\n                // It should remain null for auto inverse\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Header\n            header: {\n                type: String,\n                default: null\n            },\n            headerVariant: {\n                type: String,\n                default: null\n            },\n            headerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            headerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Footer\n            footer: {\n                type: String,\n                default: null\n            },\n            footerVariant: {\n                type: String,\n                default: null\n            },\n            footerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            footerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Main block\n            title: {\n                type: String,\n                default: null\n            },\n            subTitle: {\n                type: String,\n                default: null\n            },\n            noBlock: {\n                type: Boolean,\n                default: false\n            },\n\n            // Image\n            img: {\n                type: String,\n                default: null\n            },\n            imgAlt: {\n                type: String,\n                default: null\n            },\n            overlay: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card-' + type]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"carousel slide\"\n         role=\"region\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n         :aria-busy=\"isSliding ? 'true' : 'false'\"\n         @mouseenter=\"pause\"\n         @mouseleave=\"start\"\n         @focusin=\"pause\"\n         @focusout=\"restart($event)\"\n         @keydown.left.stop.prevent=\"prev\"\n         @keydown.right.stop.prevent=\"next\"\n    >\n\n        <!-- Wrapper for slides -->\n        <div class=\"carousel-inner\"\n             role=\"list\"\n             :id=\"id ? (id + '__BV_inner_') : null\"\n        >\n            <slot></slot>\n        </div>\n\n        <!-- Controls -->\n        <template v-if=\"controls\">\n            <a class=\"carousel-control-prev\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"prev\"\n               @keydown.enter.stop.prevent=\"prev\"\n               @keydown.space.stop.prevent=\"prev\"\n            >\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelPrev}}</span>\n            </a>\n            <a class=\"carousel-control-next\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"next\"\n               @keydown.enter.stop.prevent=\"next\"\n               @keydown.space.stop.prevent=\"next\"\n            >\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelNext}}</span>\n            </a>\n        </template>\n\n        <!-- Indicators -->\n        <ol class=\"carousel-indicators\"\n            role=\"group\"\n            v-show=\"indicators\"\n            :id=\"id ? (id + '__BV_indicators_') : null\"\n            :aria-hidden=\"indicators ? 'false' : 'true'\"\n            :aria-label=\"(indicators && labelIndicators) ? labelIndicators : null\"\n            :aria-owns=\"(indicators && id) ? (id + '__BV_inner_') : null\"\n        >\n            <li v-for=\"n in slides.length\"\n                role=\"button\"\n                :id=\"id ? (id + '__BV_indicator_' + n + '_') : null\"\n                :tabindex=\"indicators ? '0' : '-1'\"\n                :class=\"{active:n-1 === index}\"\n                :aria-current=\"n-1 === index ? 'true' : 'false'\"\n                :aria-posinset=\"n\"\n                :aria-setsize=\"slides.length\"\n                :aria-label=\"labelGotoSlide + ' ' + n\"\n                :aria-describedby=\"slides[n-1].id || null\"\n                :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n                @click=\"index=n-1\"\n                @keydown.enter.stop.prevent=\"index=n-1\"\n                @keydown.space.stop.prevent=\"index=n-1\"\n            ></li>\n        </ol>\n\n    </div>\n</template>\n\n<script>\n    const DIRECTION = {\n        next: {\n            current: 'carousel-item-left',\n            next: 'carousel-item-right',\n            overlay: 'carousel-item-next'\n        },\n        prev: {\n            current: 'carousel-item-right',\n            next: 'carousel-item-left',\n            overlay: 'carousel-item-prev'\n        }\n    };\n\n    export default {\n        data() {\n            return {\n                index: 0,\n                isSliding: false,\n                slides: []\n            };\n        },\n        props: {\n            id: {\n                type: String\n            },\n            labelPrev: {\n                type: String,\n                default: 'Previous Slide'\n            },\n            labelNext: {\n                type: String,\n                default: 'Next Slide'\n            },\n            labelGotoSlide: {\n                type: String,\n                default: 'Goto Slide'\n            },\n            labelIndicators: {\n                type: String,\n                default: 'Select a slide to display'\n            },\n            interval: {\n                type: Number,\n                default: 5000\n            },\n            indicators: {\n                type: Boolean,\n                default: false\n            },\n            controls: {\n                type: Boolean,\n                default: false\n            },\n            height: {\n                type: String\n            },\n            background: {\n                type: String\n            }\n        },\n        methods: {\n            // Previous slide\n            prev() {\n                if (this.index <= 0) {\n                    this.index = this.slides.length - 1;\n                } else {\n                    this.index--;\n                }\n            },\n\n            // Next slide\n            next() {\n                if (typeof document !== 'undefined' && document.visibilityState && document.hidden) {\n                    // Don't animate when page is not visible\n                    return;\n                }\n                if (this.index >= this.slides.length - 1) {\n                    this.index = 0;\n                } else {\n                    this.index++;\n                }\n            },\n\n            // Pause auto rotation\n            pause() {\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\n                    return;\n                }\n                clearInterval(this._intervalId);\n                this._intervalId = null;\n                // Make current slide focusable for screen readers\n                this.slides[this.index].tabIndex = 0;\n            },\n\n            // Start auto rotate slides\n            start() {\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\n                    return;\n                }\n                this.slides.forEach(slide => {\n                    slide.tabIndex = -1;\n                });\n                this._intervalId = setInterval(() => {\n                    this.next();\n                }, this.interval);\n            },\n\n            // Re-Start auto rotate slides when focus leaves the carousel\n            restart(e) {\n                if (!e.relatedTarget || !this.$el.contains(e.relatedTarget)) {\n                    this.start();\n                }\n            }\n            \n        },\n        mounted() {\n            // Get all slides\n            this.slides = Array.prototype.slice.call(this.$el.querySelectorAll('.carousel-item'));\n\n            // Set first slide as active\n            this.slides[0].classList.add('active');\n            const self = this;\n            this.slides.forEach((slide, idx) => {\n                const n = idx + 1;\n                slide.setAttribute('aria-current', idx === 0 ? 'true' : 'false');\n                slide.setAttribute('aria-posinset', String(n));\n                slide.setAttribute('aria-setsize', String(self.slides.length));\n                slide.tabIndex = -1;\n                if (self.id) {\n                    slide.setAttribute('aria-controlledby', self.id + '__BV_indicator_' + n + '_');\n                }\n            });\n\n            // Auto rotate slides\n            this._intervalId = null;\n            this.start();\n        },\n        watch: {\n            index(val, oldVal) {\n                if (val === oldVal) {\n                    return;\n                }\n\n                if (this.isSliding) {\n                    this.index = oldVal;\n                    return;\n                }\n\n                // Determine sliding direction\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\n\n                // Rotates\n                if (oldVal === 0 && val === this.slides.length - 1) {\n                    direction = DIRECTION.prev;\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\n                    direction = DIRECTION.next;\n                }\n\n                // Determine current and next slides\n                const currentSlide = this.slides[oldVal];\n                const nextSlide = this.slides[val];\n\n                if (!currentSlide || !nextSlide) {\n                    return;\n                }\n\n                // Start animating\n                this.isSliding = true;\n\n                nextSlide.classList.add(direction.next, direction.overlay);\n                currentSlide.classList.add(direction.current);\n\n                this._carouselAnimation = setTimeout(() => {\n                    this.$emit('slide', val);\n\n                    currentSlide.classList.remove('active');\n                    currentSlide.setAttribute('aria-current', 'false');\n                    currentSlide.setAttribute('aria-hidden', 'true');\n                    currentSlide.tabIndex = -1;\n                    currentSlide.classList.remove(direction.current);\n\n                    nextSlide.classList.add('active');\n                    nextSlide.setAttribute('aria-current', 'true');\n                    nextSlide.setAttribute('aria-hidden', 'false');\n                    nextSlide.tabIndex = -1;\n                    nextSlide.classList.remove(direction.next, direction.overlay);\n\n                    if (!this._intervalId) {\n                        // Focus the current slide for screen readers if not in play mode\n                        currentSlide.tabIndex = 0;\n                        this.$nextTick(() => {\n                            currentSlide.focus();\n                        });\n                    }\n\n                    this.isSliding = false;\n                }, 500);\n            }\n        },\n        destroyed() {\n            clearTimeout(this._carouselAnimation);\n            clearInterval(this._intervalId);\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"carousel-item\"\n         role=\"listitem\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n    >\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\n        <div :class=\"contentClasses\">\n            <h3 v-if=\"caption\" v-html=\"caption\"></h3>\n            <p v-if=\"text\" v-html=\"text\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String\n            },\n            img: {\n                type: String\n            },\n            imgAlt: {\n                type: String\n            },\n            contentVisibleUp: {\n                type: String\n            },\n            caption: {\n                type: String\n            },\n            text: {\n                type: String\n            },\n            background: {\n                type: String\n            },\n            height: {\n                type: String\n            }\n        },\n        computed: {\n            contentClasses() {\n                const classes = {\n                    'carousel-caption': Boolean(this.caption)\n                };\n                if (this.contentVisibleUp) {\n                    classes['d-none'] = true;\n                    classes[`d-${this.contentVisibleUp}-block`] = true;\n                }\n                return classes;\n            }\n        }\n    };\n</script>\n","<template>\n    <transition\n            @enter=\"enter\"\n            @after-enter=\"clearHeight\"\n            @leave=\"leave\"\n            @after-leave=\"clearHeight\"\n            name=\"collapse\"\n    >\n        <div :id=\"id || null\" :class=\"classObject\" v-show=\"show\">\n            <slot></slot>\n        </div>\n    </transition>\n</template>\n\n<style scoped>\n    .collapse-enter-active, .collapse-leave-active {\n        transition: all .35s ease;\n        overflow: hidden;\n    }\n</style>\n\n<script>\n    export default {\n        data() {\n            return {\n                show: this.visible\n            };\n        },\n        computed: {\n            classObject() {\n                return {\n                    'navbar-collapse': this.isNav,\n                    show: this.show\n                };\n            }\n        },\n        model: {\n            prop: 'visible',\n            event: 'input'\n        },\n        watch: {\n            visible(newVal) {\n                if (newVal !== this.show) {\n                    this.show = newVal;\n                    this.emitState();\n                }\n            },\n        },\n        props: {\n            isNav: {\n                type: Boolean,\n                default: false\n            },\n            id: {\n                type: String,\n                required: true\n            },\n            accordion: { \n                type: String,\n                default: null\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle() {\n                this.show = !this.show;\n                this.emitState();\n            },\n            enter(el) {\n                el.style.height = 'auto';\n                const realHeight = getComputedStyle(el).height;\n                el.style.height = '0px';\n\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n\n                el.style.height = realHeight;\n            },\n            leave(el) {\n                el.style.height = 'auto';\n                const realHeight = getComputedStyle(el).height;\n                el.style.height = realHeight;\n\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n\n                el.style.height = '0px';\n            },\n            clearHeight(el) {\n                el.style.height = null;\n            },\n            emitState() {\n                this.$emit('input', this.show);\n                this.$root.$emit('collapse::toggle::state', this.id, this.show);\n                if (this.accordion && this.show) {\n                    // Tell the other collapses in this accordion to close\n                    this.$root.$emit('accordion::toggle', this.id, this.accordion);\n                }\n            }\n        },\n        created() {\n            this.$root.$on('collapse::toggle', target => {\n                if (target !== this.id) {\n                    return;\n                }\n                this.toggle();\n            });\n            this.$root.$on('accordion::toggle', (openedId, accordion) => {\n                if (!this.accordion || accordion !== this.accordion) {\n                    return;\n                }\n                if (openedId === this.id) {\n                    if (!this.show) {\n                        this.toggle();\n                    }\n                } else {\n                    if (this.show) {\n                        this.toggle();\n                    }\n                }\n            });\n        },\n        mounted() {\n            this.emitState();\n        }\n    };\n\n</script>\n","<template>\n    <div :id=\"id || null\" :class=\"['dropdown','btn-group',{dropup, show: visible}]\">\n\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\n                  ref=\"button\"\n                  :id=\"id ? (id + '__BV_button_') : null\"\n                  :aria-haspopup=\"split ? null : 'true'\"\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"click\"\n        >\n            <slot name=\"text\">{{text}}</slot>\n        </b-button>\n\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split',{'btn-link': link}]\"\n                  v-if=\"split\"\n                  ref=\"toggle\"\n                  :id=\"id ? (id + '__BV_toggle_') : null\"\n                  :aria-haspopup=\"split ? 'true' : null\"\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"toggle\"\n        >\n            <span class=\"sr-only\">{{toggleText}}</span>\n        </b-button>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             ref=\"menu\"\n             role=\"menu\"\n             :aria-labelledby=\"id ? (id + (split ? '__BV_toggle_' : '__BV_button_')) : null\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n             @mouseover=\"focusHovered($event)\"\n        >\n            <slot></slot>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import clickOut from '../mixins/clickout';\n    import dropdown from '../mixins/dropdown';\n    import bButton from './button.vue';\n\n    export default {\n        mixins: [clickOut, dropdown],\n        components: {bButton},\n        data() {\n            return {\n                visible: false\n            };\n        },\n        props: {\n            id: {\n                type: String\n            },\n            toggleText: {\n                type: String,\n                default: 'Toggle Dropdown'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            link: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            clickOutListener() {\n                this.visible = false;\n            },\n            click(e) {\n                if (this.disabled) {\n                    this.visible = false;\n                    return;\n                }\n\n                if (this.split) {\n                    this.$emit('click', e);\n                    this.$root.$emit('shown::dropdown', this);\n                } else {\n                    this.toggle();\n                }\n            }\n        }\n    };\n\n</script>\n","<template>\n    <b-link class=\"dropdown-item\"\n            role=\"menuitem\"\n            :active=\"active\"\n            :disabled=\"disabled\"\n            :href=\"href\"\n            :to=\"to\"\n            :tag=\"tag\"\n            :exact=\"exact\"\n            :append=\"append\"\n            :replace=\"replace\"\n            :active-class=\"activeClass\"\n            :exact-active-class=\"exactActiveClass\"\n            :event=\"event\"\n            :target=\"target\"\n            :rel=\"rel\"\n            @click=\"$emit('click')\"\n    >\n        <slot></slot>\n    </b-link>\n</template>\n\n<script>\n    import linkMixin from '../mixins/link';\n    import bLink from './link.vue';\n\n    export default {\n        components: {bLink},\n        mixins: [linkMixin]\n    };\n</script>\n","<template>\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" tabindex=\"-1\" class=\"dropdown-header\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'h6'\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <div :class=\"['form-group','row',inputState]\"\n         :id=\"id || null\"\n         role=\"group\"\n         :aria-describedby=\"describedBy\"\n    >\n        <label v-if=\"label\"\n               :for=\"target\"\n               :id=\"labelId\"\n               :class=\"[labelSrOnly ? 'sr-only' : 'col-form-label',labelLayout,labelAlignClass]\"\n               v-html=\"label\"\n        ></label>\n        <div :class=\"inputLayout\" ref=\"content\">\n            <slot></slot>\n            <div v-if=\"feedback\"\n                 class=\"form-text form-control-feedback\"\n                 :id=\"feedbackId\"\n                 role=\"alert\"\n                 aria-live=\"assertive\"\n                 aria-atomic=\"true\"\n                 v-html=\"feedback\"\n            ></div>\n            <small v-if=\"description\"\n                   class=\"form-text text-muted\"\n                   :id=\"descriptionId\"\n                   v-html=\"description\"\n            ></small>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                target: null\n            };\n        },\n        computed: {\n            labelId() {\n                return (this.id && this.label) ? (this.id + '__BV_label_') : null;\n            },\n            descriptionId() {\n                return (this.id && this.description) ? (this.id + '__BV_description_') : null;\n            },\n            feedbackId() {\n                return (this.id && this.feedback) ? (this.id + '__BV_feedback_') : null;\n            },\n            describedBy() {\n                if (this.id && (this.label || this.feedback || this.description)) {\n                    return [\n                        this.labelId,\n                        this.descriptionId,\n                        this.feedbackId\n                    ].filter(i => i).join(' ');\n                }\n                return null;\n            },\n            inputState() {\n                return this.state ? `has-${this.state}` : '';\n            },\n            labelLayout() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.horizontal ? ('col-sm-' + this.labelSize) : 'col-12';\n            },\n            labelAlignClass() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\n            },\n            inputLayout() {\n                return this.horizontal ? ('col-sm-' + (12 - this.labelSize)) : 'col-12';\n            }\n        },\n        methods: {\n            updateTarget() {\n                if (this.for && this.$el && this.$el.querySelector('#' + this.for)) {\n                    return this.for;\n                }\n                const content = this.$refs.content;\n                if (!content) {\n                    return null;\n                }\n                const input = content.querySelector(this.inputSelector);\n                this.target = (input && input.id) ? input.id : null;\n            }\n        },\n        mounted() {\n            this.updateTarget();\n        },\n        updated() {\n            this.updateTarget();\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            for: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            horizontal: {\n                type: Boolean,\n                default: false\n            },\n            labelSize: {\n                type: Number,\n                default: 3\n            },\n            labelTextAlign: {\n                type: String,\n                default: null\n            },\n            label: {\n                type: String,\n                default: null\n            },\n            labelSrOnly: {\n                type: Boolean,\n                default: false\n            },\n            description: {\n                type: String,\n                default: null\n            },\n            feedback: {\n                type: String,\n                default: null\n            },\n            inputSelector: {\n                type: String,\n                default: '[role=\"radiogroup\"],input,select,textarea,.form-control,.form-control-static,.dropdown,.dropup'\n            }\n        }\n    };\n</script>\n","export default {\n    computed: {\n        inputClass() {\n            return [\n                this.size ? `form-control-${this.size}` : null,\n                this.state ? `form-control-${this.state}` : null\n            ];\n        },\n        custom() {\n            return !this.plain;\n        }\n    },\n    props: {\n        name: {\n            type: String\n        },\n        disabled: {\n            type: Boolean\n        },\n        plain: {\n            type: Boolean,\n            default: false\n        },\n        state: {\n            type: String\n        },\n        size: {\n            type: String\n        },\n        id: {\n            type: String\n        }\n    }\n};\n\n","export default {\n    computed: {\n        checkboxClass() {\n            return {\n                'custom-control': this.custom,\n                'form-check-inline': this.inline\n            };\n        }\n    }\n};\n\n","<template>\n    <label :class=\"[inputClass,checkboxClass,custom?'custom-checkbox':null]\">\n        <input type=\"checkbox\"\n               :id=\"id || null\"\n               :name=\"name\"\n               :value=\"value\"\n               :disabled=\"disabled\"\n               :class=\"[custom?'custom-control-input':null]\"\n               :checked=\"isChecked\"\n               @change=\"handleChange\">\n        <span class=\"custom-control-indicator\"\n              aria-hidden=\"true\"\n              v-if=\"custom\"></span>\n        <span :class=\"[custom?'custom-control-description':null]\">\n            <slot></slot>\n        </span>\n    </label>\n</template>\n\n<script>\nimport formMixin from '../mixins/form';\nimport formCheckBoxMixin from '../mixins/form-checkbox';\n\nexport default {\n    mixins: [formMixin, formCheckBoxMixin],\n    model: {\n        prop: 'checked',\n        event: 'change'\n    },\n    props: {\n        value: {\n            default: true\n        },\n        uncheckedValue: {\n            default: false\n        },\n        checked: {\n            default: true\n        }\n    },\n    computed: {\n        isChecked() {\n            if (Array.isArray(this.checked)) {\n                return this.checked.includes(this.value);\n            } else {\n                return this.checked;\n            }\n        }\n    },\n    methods: {\n        handleChange({ target: { checked } }) {\n            if (Array.isArray(this.checked)) {\n                if (this.isChecked) {\n                    this.$emit('change', this.checked.filter(x => x !== this.value));\n                } else {\n                    this.$emit('change', [...this.checked, this.value]);\n                }\n            } else {\n                this.$emit('change', checked ? this.value : this.uncheckedValue)\n            }\n        }\n    }\n};\n\n</script>\n","export default {\n    computed: {\n        formOptions() {\n            let options = this.options || {};\n\n            if (Array.isArray(options)) {\n                // Normalize flat arrays to object Array\n                options = options.map(option => {\n                    if (typeof option === 'object') {\n                        return {\n                            value: option[this.valueField],\n                            text: option[this.textField],\n                            disabled: option.disabled || false\n                        };\n                    }\n\n                    return {text: String(option), value: option || {}};\n                });\n            } else {\n                // Normalize Objects keys to Array\n                options = Object.keys(options).map(value => {\n                    let option = options[value] || {};\n\n                    // Resolve text\n                    if (typeof option !== 'object') {\n                        option = {text: String(option)};\n                    }\n\n                    // Resolve value (uses key as value if not provided)\n                    option.value = option[this.valueField] || value;\n\n                    return option;\n                });\n            }\n\n            return options;\n        },\n        selectedValue() {\n            const formOptions = this.formOptions;\n            for (let i = 0; i < formOptions.length; i++) {\n                if (formOptions[i].value === this.localValue) {\n                    if (this.returnObject) {\n                        return formOptions[i];\n                    }\n                    return formOptions[i].value;\n                }\n            }\n        }\n    },\n    props: {\n        valueField: {\n            type: [String],\n            default: 'value'\n        },\n        textField: {\n            type: [String],\n            default: 'text'\n        }\n    },\n    watch: {\n        localValue(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.$emit('input', this.selectedValue);\n        },\n        value(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.localValue = value;\n        }\n    }\n};\n","<template>\n    <div :id=\"id || null\"\n         :class=\"[inputClass, this.stacked?'custom-controls-stacked':'']\"\n         role=\"radiogroup\"\n    >\n        <label :class=\"[checkboxClass,custom?'custom-radio':null]\" v-for=\"option in formOptions\">\n            <input :id=\"option.id || null\"\n                   :class=\"custom?'custom-control-input':null\"\n                   ref=\"inputs\"\n                   type=\"radio\"\n                   v-model=\"localValue\"\n                   :value=\"option.value\"\n                   :name=\"option.name\"\n                   :disabled=\"option.disabled\"\n                   @change=\"$emit('change', returnObject ? option : option.value)\"\n            >\n            <span v-if=\"custom\" class=\"custom-control-indicator\" aria-hidden=\"true\"></span>\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\n        </label>\n    </div>\n</template>\n\n<script>\n    import formOptionsMixin from '../mixins/form-options';\n    import formMixin from '../mixins/form';\n    import formCheckBoxMixin from '../mixins/form-checkbox';\n\n    export default {\n        mixins: [formMixin, formCheckBoxMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        computed: {\n            inputState() {\n                return this.state ? `has-${this.state}` : '';\n            }\n        },\n        props: {\n            value: {},\n            options: {\n                type: [Array, Object],\n                default: null,\n                required: true\n            },\n            stacked: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <p :id=\"id || null\"\n       :class=\"['form-control-static',inputClass]\"\n       v-html=\"staticValue\"\n    >\n        <slot></slot>\n    </p>\n</template>\n\n<script>\n    import formMixin from '../mixins/form';\n\n    export default {\n        mixins: [formMixin],\n        computed: {\n            staticValue() {\n                return this.formatter ? this.formatter(this.value) : this.value;\n            }\n        },\n        props: {\n            value: {\n                default: null\n            },\n            formatter: {\n                type: Function\n            }\n        }\n    };\n\n</script>\n","<template>\n    <input v-if=\"!static\"\n           ref=\"input\"\n           :type=\"type\"\n           :value=\"value\"\n           :name=\"name\"\n           :id=\"id || null\"\n           :disabled=\"disabled\"\n           :is=\"textarea?'textarea':'input'\"\n           :class=\"['form-control',inputClass]\"\n           :rows=\"rows || rowsCount\"\n           :placeholder=\"placeholder\"\n           @input=\"onInput($event.target.value)\"\n           @change=\"onChange($event.target.value)\"\n           @keyup=\"onKeyUp($event)\"\n           @focus=\"$emit('focus')\"\n           @blur=\"$emit('blur')\"\n    />\n    <b-form-input-static v-else\n                         :id=\"id || null\"\n                         :value=\"value\"\n                         :formatter=\"formatter\"\n    ></b-form-input-static>\n</template>\n\n<script>\n    import formMixin from '../mixins/form';\n    import bFormInputStatic from './form-input-static.vue';\n\n    export default {\n        mixins: [formMixin],\n        components: {bFormInputStatic},\n        computed: {\n            rowsCount() {\n                return (this.value || '').toString().split('\\n').length;\n            }\n        },\n        methods: {\n            format(value) {\n                if (this.formatter) {\n                    const formattedValue = this.formatter(value);\n                    if (formattedValue !== value) {\n                        value = formattedValue;\n                        this.$refs.input.value = formattedValue;\n                    }\n                }\n                return value;\n            },\n            onInput(value) {\n                if (!this.lazyFormatter) {\n                    value = this.format(value);\n                }\n                this.$emit('input', value);\n            },\n            onChange(value) {\n                value = this.format(value);\n                this.$emit('input', value);\n                this.$emit('change', value);\n            },\n            onKeyUp(e) {\n                this.$emit('keyup', e);\n            },\n            focus() {\n                this.$refs.input.focus();\n            }\n        },\n        props: {\n            value: {\n                default: null\n            },\n            type: {\n                type: String,\n                default: 'text'\n            },\n            static: {\n                type: Boolean,\n                default: false\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            rows: {\n                type: Number,\n                default: null\n            },\n            textarea: {\n                type: Boolean,\n                default: false\n            },\n            formatter: {\n                type: Function\n            },\n            lazyFormatter: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"['form-control', custom?'custom-file':null, inputClass]\"\n         :id=\"id ? (id + '__BV_file_outer_') : null\"\n         @dragover.stop.prevent=\"dragover\"\n    >\n\n        <!-- Drop Here Target -->\n        <span class=\"drop-here\"\n              v-if=\"dragging && custom\"\n              @dragover.stop.prevent=\"dragover\"\n              @drop.stop.prevent=\"drop\"\n              @dragleave.stop.prevent=\"dragging=false\"\n              :data-drop=\"dropLabel\"\n        ></span>\n\n        <!-- Real Form input -->\n        <input type=\"file\"\n               ref=\"input\"\n               :class=\"custom ? 'custom-file-input' : ''\"\n               :name=\"name\"\n               :id=\"id || null\"\n               :disabled=\"disabled\"\n               :accept=\"accept || null\"\n               :multiple=\"multiple\"\n               :webkitdirectory=\"directory\"\n               :aria-describedby=\"(custom && id) ? (id + '__BV_file_control_') : null\"\n               @change=\"onFileChange\"\n        >\n\n        <!-- Overlay Labels -->\n        <span :class=\"['custom-file-control',dragging?'dragging':null,inputClass]\"\n              :id=\"id ? (id + '__BV_file_control_') : null\"\n              :data-choose=\"computedChooseLabel\"\n              :data-selected=\"selectedLabel\"\n              v-if=\"custom\"\n        ></span>\n\n    </div>\n</template>\n\n<style scoped>\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control.dragging {\n        overflow: hidden;\n        filter: blur(3px);\n    }\n\n    .custom-file-control::after {\n        content: attr(data-selected);\n    }\n\n    .custom-file-control::before {\n        content: attr(data-choose);\n    }\n\n    .custom-file .drop-here {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, .5);\n        border-radius: 3px;\n        z-index: 99999;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .custom-file .drop-here::before {\n        color: white;\n        content: attr(data-drop);\n    }\n\n</style>\n\n<script>\n    import formMixin from '../mixins/form';\n\n    export default {\n        mixins: [formMixin],\n        data() {\n            return {\n                selectedFile: null,\n                dragging: false\n            };\n        },\n        computed: {\n            selectedLabel() {\n                if (!this.selectedFile || this.selectedFile.length === 0) {\n                    return this.placeholder || 'No file chosen';\n                }\n\n                if (this.multiple) {\n                    if (this.selectedFile.length === 1) {\n                        return this.selectedFile[0].name;\n                    }\n\n                    return this.selectedFormat\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\n                        .replace(':count', this.selectedFile.length);\n                }\n\n                return this.selectedFile.name;\n            },\n            computedChooseLabel() {\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\n            }\n        },\n        watch: {\n            selectedFile(newVal, oldVal) {\n                if (newVal === oldVal) {\n                    return;\n                }\n\n                if (!newVal && this.multiple) {\n                    this.$emit('input', []);\n                } else {\n                    this.$emit('input', newVal);\n                }\n            }\n        },\n        methods: {\n            onFileChange(e) {\n                // Always emit original event\n                this.$emit('change', e);\n\n                // Check if special `items` prop is available on event (drop mode)\n                // Can be disabled by setting no-traverse\n                const items = e.dataTransfer && e.dataTransfer.items;\n                if (items && !this.noTraverse) {\n                    const queue = [];\n                    for (let i = 0; i < items.length; i++) {\n                        const item = items[i].webkitGetAsEntry();\n                        if (item) {\n                            queue.push(this.traverseFileTree(item));\n                        }\n                    }\n                    Promise.all(queue).then(filesArr => {\n                        this.setFiles(Array.prototype.concat.apply([], filesArr));\n                    });\n                    return;\n                }\n\n                // Normal handling\n                this.setFiles(e.target.files || e.dataTransfer.files);\n            },\n            setFiles(files) {\n                if (!files) {\n                    this.selectedFile = null;\n                    return;\n                }\n\n                if (!this.multiple) {\n                    this.selectedFile = files[0];\n                    return;\n                }\n\n                // Convert files to array\n                const filesArray = [];\n                for (let i = 0; i < files.length; i++) {\n                    if (files[i].type.match(this.accept)) {\n                        filesArray.push(files[i]);\n                    }\n                }\n\n                this.selectedFile = filesArray;\n            },\n            dragover(e) {\n                if (this.noDrop || !this.custom) {\n                    return;\n                }\n\n                this.dragging = true;\n                e.dataTransfer.dropEffect = 'copy';\n            },\n            drop(e) {\n                if (this.noDrop) {\n                    return;\n                }\n\n                this.dragging = false;\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n                    this.onFileChange(e);\n                }\n            },\n            traverseFileTree(item, path) {\n                // Based on http://stackoverflow.com/questions/3590058\n                return new Promise(resolve => {\n                    path = path || '';\n                    if (item.isFile) {\n                        // Get file\n                        item.file(file => {\n                            file.$path = path; // Inject $path to file obj\n                            resolve(file);\n                        });\n                    } else if (item.isDirectory) {\n                        // Get folder contents\n                        item.createReader().readEntries(entries => {\n                            const queue = [];\n                            for (let i = 0; i < entries.length; i++) {\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\n                            }\n                            Promise.all(queue).then(filesArr => {\n                                resolve(Array.prototype.concat.apply([], filesArr));\n                            });\n                        });\n                    }\n                });\n            }\n        },\n        props: {\n            accept: {\n                type: String,\n                default: ''\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            chooseLabel: {\n                type: String,\n                default: null\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            directory: {\n                type: Boolean,\n                default: false\n            },\n            noTraverse: {\n                type: Boolean,\n                default: false\n            },\n            selectedFormat: {\n                type: String,\n                default: ':count Files'\n            },\n            noDrop: {\n                type: Boolean,\n                default: false\n            },\n            dropLabel: {\n                type: String,\n                default: 'Drop files here'\n            }\n        }\n    };\n</script>\n","<template>\n    <select :class=\"['form-control',inputClass,custom?'custom-select':null]\"\n            :name=\"name\"\n            :id=\"id || null\"\n            v-model=\"localValue\"\n            :disabled=\"disabled\"\n            ref=\"input\"\n    >\n        <option v-for=\"option in formOptions\"\n                :value=\"option.value\"\n                v-html=\"option.text\"\n                :disabled=\"option.disabled\"\n        ></option>\n    </select>\n</template>\n\n<script>\n    import formOptions from '../mixins/form-options';\n    import formMixin from '../mixins/form';\n\n    export default {\n        mixins: [formMixin, formOptions],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        props: {\n            value: {},\n            options: {\n                type: [Array, Object],\n                required: true\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\n            <h1 v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {},\n        props: {\n            fluid: {\n                type: Boolean,\n                default: false\n            },\n            containerFluid: {\n                type: Boolean,\n                default: false\n            },\n            header: {\n                type: String,\n                default: null\n            },\n            lead: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\" :class=\"classObject\" ref=\"item\" :to=\"to\" :href=\"href\" :target=\"target\" :rel=\"rel\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    const actionTags = ['a', 'router-link', 'button', 'b-link'];\n\n    export default {\n        components: {bLink},\n        computed: {\n            classObject() {\n                return [\n                    'list-group-item',\n                    this.listState,\n                    this.active ? 'active' : null,\n                    this.disabled ? 'disabled' : null,\n                    this.isAction ? 'list-group-item-action' : null\n                ];\n            },\n            isAction() {\n                if (this.action === false) {\n                    return false;\n                }\n                return this.action || this.to || this.href || actionTags.indexOf(this.tag) !== -1;\n            },\n            listState() {\n                return this.variant ? `list-group-item-${this.variant}` : null;\n            },\n            myTag() {\n                if (this.tag) {\n                    return this.tag;\n                }\n                return (this.to || this.href) ? 'b-link' : 'div';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: null\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            action: {\n                type: Boolean,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            to: {\n                type: [String, Object],\n                default: null\n            },\n            href: {\n                type: String,\n                default: null\n            },\n            target: {\n                type: String,\n                default: null\n            },\n            rel: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\n    <div>\n        <transition-group enter-class=\"hidden\"\n                          enter-to-class=\"\"\n                          enter-active-class=\"\"\n                          @after-enter=\"focusFirst\"\n                          leave-class=\"show\"\n                          leave-active-class=\"\"\n                          leave-to-class=\"hidden\"\n        >\n            <div :class=\"['modal',{fade: !noFade, show: is_visible}]\"\n                 :id=\"id || null\"\n                 role=\"dialog\"\n                 ref=\"modal\"\n                 key=\"modal\"\n                 v-show=\"is_visible\"\n                 @click=\"onClickOut()\"\n                 @keyup.esc=\"onEsc()\"\n            >\n\n                <div :class=\"['modal-dialog','modal-'+size]\">\n                    <div class=\"modal-content\"\n                         tabindex=\"-1\"\n                         role=\"document\"\n                         ref=\"content\"\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '__BV_title_')\"\n                         :aria-describedby=\"id ? (id + '__BV_body_') : null\"\n                         @click.stop\n                    >\n\n                        <header class=\"modal-header\" ref=\"header\" v-if=\"!hideHeader\">\n                            <slot name=\"modal-header\">\n                                <h5 class=\"modal-title\" :id=\"id ? (id + '__BV_title_') : null\">\n                                    <slot name=\"modal-title\">{{title}}</slot>\n                                </h5>\n                                <button type=\"button\"\n                                        v-if=\"!hideHeaderClose\"\n                                        class=\"close\"\n                                        :aria-label=\"closeTitle\"\n                                        @click=\"hide\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </slot>\n                        </header>\n\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '__BV_body_') : null\">\n                            <slot></slot>\n                        </div>\n\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\n                            <slot name=\"modal-footer\">\n                                <b-btn variant=\"secondary\" @click=\"hide(false)\" v-if=\"!okOnly\">{{closeTitle}}</b-btn>\n                                <b-btn variant=\"primary\" @click=\"hide(true)\" :disabled=\"okDisabled\">{{okTitle}}</b-btn>\n                            </slot>\n                        </footer>\n\n                    </div>\n                </div>\n            </div>\n\n            <div key=\"modal-backdrop\"\n                 :class=\"['modal-backdrop',{fade: !noFade, show: is_visible}]\"\n                 v-if=\"is_visible\"\n            ></div>\n        </transition-group>\n    </div>\n</template>\n\n<style scoped>\n    .hidden {\n        opacity: 0 !important;\n    }\n\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\n    .modal {\n        display: block;\n    }\n</style>\n\n<script>\n    import bBtn from './button.vue';\n\n    const FOCUS_SELECTOR = [\n        'button:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'input:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'select:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'textarea:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'a:not([disabled]):not(.disabled):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        '[tabindex]:not([disabled]):not(.disabled):not([style*=\"display: none\"]):not([style*=\"display:none\"])'\n    ].join(',');\n\n    export default {\n        components: {bBtn},\n        data() {\n            return {\n                is_visible: false,\n                return_focus: this.returnFocus || null\n            };\n        },\n        model: {\n            prop: 'visible',\n            event: 'change'\n        },\n        computed: {\n            body() {\n                if (typeof document !== 'undefined') {\n                    return document.querySelector('body');\n                }\n            }\n        },\n        watch: {\n            visible(new_val, old_val) {\n                if (new_val === old_val) {\n                    return;\n                }\n\n                if (new_val) {\n                    this.show();\n                } else {\n                    this.hide();\n                }\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnBackdrop: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnEsc: {\n                type: Boolean,\n                default: false\n            },\n            hideHeader: {\n                type: Boolean,\n                default: false\n            },\n            hideFooter: {\n                type: Boolean,\n                default: false\n            },\n            okOnly: {\n                type: Boolean,\n                default: false\n            },\n            okDisabled: {\n                type: Boolean,\n                default: false\n            },\n            hideHeaderClose: {\n                type: Boolean,\n                default: false\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            },\n            returnFocus: {\n                default: null\n            },\n            closeTitle: {\n                type: String,\n                default: 'Close'\n            },\n            okTitle: {\n                type: String,\n                default: 'OK'\n            }\n        },\n        methods: {\n            show() {\n                if (this.is_visible) {\n                    return;\n                }\n                this.$emit('show');\n                this.is_visible = true;\n                this.$root.$emit('shown::modal', this.id);\n                this.body.classList.add('modal-open');\n                this.$emit('shown');\n                this.$emit('change', true);\n                if (typeof document !== 'undefined') {\n                    // Guard against infinite focus loop\n                    document.removeEventListener('focusin', this.enforceFocus, false);\n                    // Handle constrained focus\n                    document.addEventListener('focusin', this.enforceFocus, false);\n                }\n            },\n            hide(isOK) {\n                if (!this.is_visible) {\n                    return;\n                }\n\n                // Create event object\n                let canceled = false;\n                const e = {\n                    isOK,\n                    cancel() {\n                        canceled = true;\n                    }\n                };\n\n                // Emit events\n                this.$emit('change', false);\n                this.$emit('hide',e);\n\n                if (isOK === true) {\n                    this.$emit('ok', e);\n                } else if (isOK === false) {\n                    this.$emit('cancel', e);\n                }\n\n                // Hide if not canceled\n                if (!canceled) {\n                    if (typeof document !== 'undefined') {\n                        // Remove focus handler\n                        document.removeEventListener('focusin', this.enforceFocus, false);\n                        // Return focus to original button/trigger element if provided\n                        this.returnFocusTo();\n                    }\n                    this.is_visible = false;\n                    this.$root.$emit('hidden::modal', this.id);\n                    this.$emit('hidden', e);\n                    this.body.classList.remove('modal-open');\n                }\n            },\n            onClickOut() {\n                // If backdrop clicked, hide modal\n                if (this.is_visible && !this.noCloseOnBackdrop) {\n                    this.hide();\n                }\n            },\n            onEsc() {\n                // If ESC pressed, hide modal\n                if (this.is_visible && !this.noCloseOnEsc) {\n                    this.hide();\n                }\n            },\n            focusFirst() {\n                // If activeElement is child of content, no need to change focus\n                if (document.activeElement && this.$refs.content.contains(document.activeElement)) {\n                    return;\n                }\n\n                // Focus the modal's first focusable item, searching footer, then body, then header, else the modal\n                let el;\n                if (this.$refs.footer) {\n                    el = this.$refs.footer.querySelector(FOCUS_SELECTOR);\n                }\n                if (!el && this.$refs.body) {\n                    el = this.$refs.body.querySelector(FOCUS_SELECTOR);\n                }\n                if (!el && this.$refs.header) {\n                    el = this.$refs.header.querySelector(FOCUS_SELECTOR);\n                }\n                if (!el) {\n                    el = this.$refs.content;\n                }\n                if (el && el.focus) {\n                    el.focus();\n                }\n            },\n            returnFocusTo() {\n                if (this.return_focus) {\n                    const el = (typeof this.return_focus === 'string') ?\n                        document.querySelector(this.returnFocus) :\n                        this.return_focus;\n\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\n                        el.$el.focus();\n                    } else if (el && typeof el.focus === 'function') {\n                        el.focus();\n                    }\n                }\n            },\n            enforceFocus(e) {\n                // If focus leaves modal, bring it back\n                // Event Listener bound on document\n                if (this.is_visible &&\n                    document !== e.target &&\n                    this.$refs.content &&\n                    this.$refs.content !== e.target &&\n                    !this.$refs.content.contains(e.target)) {\n                    this.$refs.content.focus();\n                }\n            }\n        },\n        created() {\n            this.$root.$on('show::modal', (id, triggerEl) => {\n                if (id === this.id) {\n                    this.return_focus = triggerEl || this.return_focus || this.returnFocus || null;\n                    this.show();\n                }\n            });\n\n            this.$root.$on('hide::modal', id => {\n                if (id === this.id) {\n                    this.hide();\n                }\n            });\n        },\n        mounted() {\n            if (this.visible === true) {\n                this.show();\n            }\n        },\n        destroyed() {\n            // Make sure event listener is rmoved\n            if (typeof document !== 'undefined') {\n                document.removeEventListener('focusin', this.enforceFocus, false);\n            }\n        }\n    };\n\n</script>\n","<template>\n    <component :is=\"type\"\n               :class=\"classObject\"\n               :role=\"isNavBar ? null : 'navigation'\"\n    >\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <li class=\"nav-item\">\n        <b-link class=\"nav-link\"\n                :active=\"active\"\n                :disabled=\"disabled\"\n                :href=\"href\"\n                :to=\"to\"\n                :target=\"target\"\n                :rel=\"rel\"\n                :tag=\"tag\"\n                :exact=\"exact\"\n                :append=\"append\"\n                :replace=\"replace\"\n                :active-class=\"activeClass\"\n                :exact-active-class=\"exactActiveClass\"\n                :event=\"event\"\n                @click=\"$emit('click')\"\n        >\n            <slot></slot>\n        </b-link>\n    </li>\n</template>\n\n<script>\n    import linkMixin from '../mixins/link';\n    import bLink from './link.vue';\n\n    export default {\n        components: {bLink},\n        mixins: [linkMixin]\n    };\n</script>\n","<template>\n    <li :id=\"id || null\" :class=\"['nav-item','dropdown', {dropup, show: visible}]\">\n\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\n           href=\"#\"\n           ref=\"button\"\n           :id=\"id ? (id + '__BV_button_') : null\"\n           aria-haspopup=\"true\"\n           :aria-expanded=\"visible ? 'true' : 'false'\"\n           :disabled=\"disabled\"\n           @click.stop.prevent=\"toggle($event)\"\n           @keydown.enter.stop.prevent=\"toggle($event)\"\n           @keydown.space.stop.prevent=\"toggle($event)\"\n        >\n            <slot name=\"text\"><span v-html=\"text\"></span></slot>\n        </a>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             role=\"menu\"\n             ref=\"menu\"\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n             @mouseover=\"focusHovered($event)\"\n        >\n            <slot></slot>\n        </div>\n\n    </li>\n</template>\n\n<script>\n    import clickOut from '../mixins/clickout';\n    import dropdown from '../mixins/dropdown';\n\n    export default {\n        mixins: [\n            clickOut,\n            dropdown\n        ],\n        data() {\n            return {\n                visible: false\n            };\n        },\n        computed: {\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            }\n        },\n        methods: {\n            clickOutListener() {\n                this.visible = false;\n            }\n        }\n    };\n</script>\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            :aria-controls=\"target.id ? target.id : target\"\n            :aria-expanded=\"toggleState ? 'true' : 'false'\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n    data() {\n        return {\n            toggleState: false\n        };\n    },\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        }\n    },\n    created() {\n        this.$root.$on('collapse::toggle::state', (target, state) => {\n            if (target === this.target || target === this.target.id) {\n                this.toggleState = state;\n            }\n        });\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? this.toggleableClass : null\n                ];\n            },\n            toggleableClass() {\n                let className = 'navbar-toggleable';\n\n                if (this.toggleBreakpoint) {\n                    className += `-${this.toggleBreakpoint}`;\n                }\n\n                return className;\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: null\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: String\n            }\n        }\n    };\n</script>\n","<template>\n    <span class=\"navbar-text\">\n        <slot></slot>\n    </span>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <b-form :id=\"id || null\" inline>\n        <slot></slot>\n    </b-form>\n</template>\n\n<script>\n    import bForm from './form.vue';\n    \n    export default {\n        components: [bForm],\n        props: {\n            id: {\n                type: String,\n            }\n        }\n    };\n</script>\n","import Tether from 'tether';\n// Controls which events are mapped for each named trigger, and the expected popover behavior for each.\nconst TRIGGER_LISTENERS = {\n    click: {click: 'toggle'},\n    hover: {mouseenter: 'show', mouseleave: 'hide'},\n    focus: {focus: 'show', blur: 'hide'}\n};\nconst PLACEMENT_PARAMS = {\n    top: 'bottom center',\n    bottom: 'top center',\n    left: 'middle right',\n    right: 'middle left'\n};\nconst TETHER_CLASS_PREFIX = 'bs-tether';\nconst TETHER_CLASSES = {\n    element: false,\n    enabled: false\n};\nconst TRANSITION_DURATION = 150;\n\nexport default {\n    props: {\n        constraints: {\n            type: Array,\n            default() {\n                return [];\n            }\n        },\n        debounce: {\n            type: [Number],\n            default: 300,\n            validator(value) {\n                return value >= 0;\n            }\n        },\n        delay: {\n            type: [Number, Object],\n            default: 0,\n            validator(value) {\n                if (typeof value === 'number') {\n                    return value >= 0;\n                } else if (value !== null && typeof value === 'object') {\n                    return typeof value.show === 'number' &&\n                        typeof value.hide === 'number' &&\n                        value.show >= 0 &&\n                        value.hide >= 0;\n                }\n                return false;\n            }\n        },\n        offset: {\n            type: String,\n            default: '0 0',\n            validator(value) {\n                // Regex test for a pair of units, either 0 exactly, px, or percentage\n                return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\n            }\n        },\n        placement: {\n            type: String,\n            default: 'top',\n            validator(value) {\n                return Object.keys(PLACEMENT_PARAMS).indexOf(value) !== -1;\n            }\n        },\n        popoverStyle: {\n            type: Object,\n            default: null\n        },\n        show: {\n            type: Boolean,\n            default: null\n        },\n        targetOffset: {\n            type: String,\n            default: '0 0',\n            validator(value) {\n                // Regex test for a pair of units, either 0 exactly, px, or percentage\n                return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\n            }\n        },\n        triggers: {\n            type: [Boolean, String, Array],\n            default: () => ['click', 'focus'],\n            validator(value) {\n                // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\n                if (value === false || value === '') {\n                    return true;\n                } else if (typeof value === 'string') {\n                    return Object.keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\n                } else if (Array.isArray(value)) {\n                    const keys = Object.keys(TRIGGER_LISTENERS);\n                    value.forEach(item => {\n                        if (keys.indexOf(item) === -1) {\n                            return false;\n                        }\n                    });\n                    return true;\n                }\n                return false;\n            }\n        }\n    },\n    data() {\n        return {\n            triggerState: this.show,\n            classState: this.show,\n            lastEvent: null\n        };\n    },\n    computed: {\n        /**\n         * Arrange event trigger hooks as array for all input types.\n         *\n         * @return Array\n         */\n        normalizedTriggers() {\n            if (this.triggers === false) {\n                return [];\n            } else if (typeof this.triggers === 'string') {\n                return [this.triggers];\n            }\n            return this.triggers;\n        },\n        /**\n         * Class property to be used for Popover rendering\n         *\n         * @return String\n         */\n        popoverAlignment() {\n            return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\n        },\n        /**\n         * Determine if the Popover should be shown.\n         *\n         * @return Boolean\n         */\n        showState() {\n            return this.show !== false && (this.triggerState || this.show);\n        }\n    },\n    watch: {\n        /**\n         * Refresh Tether display properties\n         */\n        constraints() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Popover event triggers\n         * @param {Array} newTriggers\n         * @param {Array} oldTriggers\n         */\n        normalizedTriggers(newTriggers, oldTriggers) {\n            this.updateListeners(newTriggers, oldTriggers);\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        offset() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        placement() {\n            this.setOptions();\n        },\n        /**\n         * Affect 'show' state in response to status change\n         * @param  {Boolean} val\n         */\n        showState(val) {\n            const delay = this.getDelay(val);\n            clearTimeout(this.$data._timeout);\n            if (delay) {\n                this.$data._timeout = setTimeout(() => this.togglePopover(val), delay);\n            } else {\n                this.togglePopover(val);\n            }\n        }\n    },\n    methods: {\n        /**\n         * Add all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        addListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.addEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Tidy removal of Tether object from the DOM\n         */\n        destroyTether() {\n            if (this.$data._tether && !this.showState) {\n                this.$data._tether.destroy();\n                this.$data._tether = null;\n                const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\n                this.$data._trigger.className = this.$data._trigger.className.replace(regx, '');\n            }\n        },\n        /**\n         * Handle multiple event triggers\n         * @param  {Object} e\n         */\n        eventHandler(e) {\n            // If this event is right after a previous successful event, ignore it (debounce)\n            if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\n                return;\n            }\n            // Look up the expected popover action for the event\n            // eslint-disable-next-line guard-for-in\n            for (const trigger in TRIGGER_LISTENERS) {\n                for (const event in TRIGGER_LISTENERS[trigger]) {\n                    if (event === e.type) {\n                        const action = TRIGGER_LISTENERS[trigger][event];\n                        // If the expected event action is the opposite of the current state, allow it\n                        if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\n                            this.triggerState = !this.triggerState;\n                            this.lastEvent = e.timeStamp;\n                        }\n                        return;\n                    }\n                }\n            }\n        },\n        /**\n         * Get the currently applicable popover delay\n         *\n         * @returns Number\n         */\n        getDelay(state) {\n            if (typeof this.delay === 'object') {\n                return state ? this.delay.show : this.delay.hide;\n            }\n            return this.delay;\n        },\n        /**\n         * Tether construct params for each show event.\n         *\n         * @return Object\n         */\n        getTetherOptions() {\n            return {\n                attachment: PLACEMENT_PARAMS[this.placement],\n                element: this.$data._popover,\n                target: this.$data._trigger,\n                classes: TETHER_CLASSES,\n                classPrefix: TETHER_CLASS_PREFIX,\n                offset: this.offset,\n                constraints: this.constraints,\n                targetOffset: this.targetOffset\n            };\n        },\n        /**\n         * Hide popover and fire event\n         */\n        hidePopover() {\n            this.classState = false;\n            clearTimeout(this.$data._timeout);\n            this.$data._timeout = setTimeout(() => {\n                this.$data._popover.style.display = 'none';\n                this.destroyTether();\n            }, TRANSITION_DURATION);\n        },\n        /**\n         * Refresh the Popover position in order to respond to changes\n         */\n        refreshPosition() {\n            if (this.$data._tether) {\n                this.$nextTick(() => {\n                    this.$data._tether.position();\n                });\n            }\n        },\n        /**\n         * Remove all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        removeListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.removeEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Update tether options\n         */\n        setOptions() {\n            if (this.$data._tether) {\n                this.$data._tether.setOptions(this.getTetherOptions());\n            }\n        },\n        /**\n         * Display popover and fire event\n         */\n        showPopover() {\n            clearTimeout(this.$data._timeout);\n            if (!this.$data._tether) {\n                this.$data._tether = new Tether(this.getTetherOptions());\n            }\n            this.$data._popover.style.display = 'block';\n            // Make sure the popup is rendered in the correct location\n            this.refreshPosition();\n            this.$nextTick(() => {\n                this.classState = true;\n            });\n        },\n        /**\n         * Handle Popover show or hide instruction\n         */\n        togglePopover(newShowState) {\n            this.$emit('showChange', newShowState);\n            if (newShowState) {\n                this.showPopover();\n                this.$root.$emit('shown::popover');\n            } else {\n                this.hidePopover();\n                this.$root.$emit('hidden::popover');\n            }\n        },\n        /**\n         * Study the 'triggers' component property and apply all selected triggers\n         * @param {Array} triggers\n         * @param {Array} appliedTriggers\n         */\n        updateListeners(triggers, appliedTriggers = []) {\n            const newTriggers = [];\n            const removeTriggers = [];\n            // Look for new events not yet mapped (all of them on first load)\n            triggers.forEach(item => {\n                if (appliedTriggers.indexOf(item) === -1) {\n                    newTriggers.push(item);\n                }\n            });\n            // Disable any removed event triggers\n            appliedTriggers.forEach(item => {\n                if (triggers.indexOf(item) === -1) {\n                    removeTriggers.push(item);\n                }\n            });\n            // Apply trigger mapping changes\n            newTriggers.forEach(item => this.addListener(item));\n            removeTriggers.forEach(item => this.removeListener(item));\n        }\n    },\n    created() {\n        this.$root.$on('hide::popover', () => {\n            this.triggerState = false;\n        });\n    },\n    mounted() {\n        // Configure tether\n        this.$data._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\n        this.$data._popover = this.$refs.popover;\n        this.$data._popover.style.display = 'none';\n        this.$data._tether = new Tether(this.getTetherOptions());\n        this.$data._timeout = 0;\n        // Add listeners for specified triggers and complementary click event\n        this.updateListeners(this.normalizedTriggers);\n        // Display popover if prop is set on load\n        if (this.showState) {\n            this.showPopover();\n        }\n    },\n    updated() {\n        this.refreshPosition();\n    },\n    beforeDestroy() {\n        this.normalizedTriggers.forEach(item => this.removeListener(item));\n        clearTimeout(this.$data._timeout);\n        this.destroyTether();\n    },\n    destroyed() {\n        // Tether is moving the popover element outside of Vue's control and leaking dom nodes\n        if (this.$data._popover.parentElement === document.body) {\n            document.body.removeChild(this.$data._popover);\n        }\n    }\n};\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['popover', 'fade', classState ? 'show' : '', popoverAlignment]\"\n             :style=\"popoverStyle\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"popover-arrow\"></div>\n            <h3 class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\n            <div class=\"popover-content\">\n                <div class=\"popover-content-wrapper\">\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import popover from '../mixins/popover';\n\n    export default {\n        mixins: [popover],\n        props: {\n            title: {\n                type: String,\n                default: ''\n            },\n            content: {\n                type: String,\n                default: ''\n            },\n            popoverStyle: {\n                type: Object,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <table :id=\"id || null\"\n           role=\"grid\"\n           :aria-busy=\"busy ? 'true' : 'false'\"\n           :class=\"tableClass\"\n    >\n        <thead :class=\"headClass\">\n            <tr role=\"row\">\n                <th v-for=\"field,key in fields\"\n                    @click.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                    :key=\"key\"\n                    :class=\"fieldClass(field,key)\"\n                    :aria-label=\"field.sortable ? ((sortDesc && sortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                    :aria-sort=\"(field.sortable && sortBy === key) ? (sortDesc ? 'descending' : 'ascending') : null\"\n                    :tabindex=\"field.sortable?'0':null\"\n                >\n                  <slot :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                </th>\n            </tr>\n        </thead>\n        <tfoot v-if=\"footClone\" :class=\"footClass\">\n            <tr role=\"row\">\n                <th v-for=\"field,key in fields\"\n                    @click.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                    :key=\"key\"\n                    :class=\"fieldClass(field,key)\"\n                    :aria-label=\"field.sortable ? ((sortDesc && sortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                    :aria-sort=\"(field.sortable && sortBy === key) ? (sortDesc ? 'descending' : 'ascending') : null\"\n                    :tabindex=\"field.sortable?'0':null\"\n                >            \n                  <slot v-if=\"$scopedSlots['FOOT_'+key]\" :name=\"'FOOT_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                  <slot v-else :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                </th>\n            </tr>\n        </tfoot>\n        <tbody>\n            <tr v-for=\"(item,index) in _items\"\n                role=\"row\"\n                :class=\"rowClass(item)\"\n                @click=\"rowClicked($event,item,index)\"\n                @hover=\"rowHovered($event,item,index)\"\n            >\n                <td v-for=\"(field,key) in fields\" :class=\"tdClass(field, item, key)\">\n                    <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\n                </td>\n            </tr>\n            <tr v-if=\"showEmpty && (!_items  || _items.length === 0)\" role=\"row\">\n                <td :colspan=\"Object.keys(fields).length\">\n                    <div v-if=\"filter\" role=\"alert\" aria-live=\"polite\">\n                        <slot name=\"emptyfiltered\">\n                            <div class=\"text-center my-2\" v-html=\"emptyFilteredText\"></div>\n                        </slot>\n                    </div>\n                    <div v-else role=\"alert\" aria-live=\"polite\">\n                        <slot name=\"empty\">\n                            <div class=\"text-center my-2\" v-html=\"emptyText\"></div>\n                        </slot>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n<script>\n    const toString = v => {\n        if (!v) {\n            return '';\n        }\n        if (v instanceof Object) {\n            return Object.keys(v).map(k => toString(v[k])).join(' ');\n        }\n        return String(v);\n    };\n\n    const recToString = (obj) => {\n        if (!(obj instanceof Object)) {\n            return '';\n        }\n\n        // Exclude these fields from record stringification\n        const exclude = { state: true, _rowVariant: true };\n\n        return toString(Object.keys(obj).reduce((o, k) => {\n          if (!exclude[k]) {\n            o[k] = obj[k];\n          }\n          return o;\n        }, {}));\n    };\n\n    const defaultSortCompare = (a, b, sortBy) => {\n        if (typeof a[sortBy] === 'number' && typeof b[sortBy] === 'number') {\n            if (a[sortBy] < b[sortBy]) {\n                return -1;\n            } else if (a[sortBy] > b[sortBy]) {\n                return 1;\n            }\n            return 0;\n        } else {\n            return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {\n                numeric: true\n            });\n        }\n    };\n\n    export default {\n        data() {\n            return {\n                sortBy: null,\n                sortDesc: true,\n                localItems: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            items: {\n                type: [Array, Function],\n                default: () => {\n                    if (this.itemsProvider) {\n                        // Deprecate itemsProvider\n                        console.warn('b-table: prop items-provider has been deprecated. Pass a function to items instead');\n                        return this.itemsProvider;\n                    }\n                    return [];\n                }\n            },\n            fields: {\n                type: Object,\n                default: {}\n            },\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            bordered: {\n                type: Boolean,\n                default: false\n            },\n            inverse: {\n                type: Boolean,\n                default: false\n            },\n            hover: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            responsive: {\n                type: Boolean,\n                default: false\n            },\n            headVariant: {\n                type: String,\n                default: ''\n            },\n            footVariant: {\n                type: String,\n                default: ''\n            },\n            perPage: {\n                type: Number,\n                default: null\n            },\n            currentPage: {\n                type: Number,\n                default: 1\n            },\n            filter: {\n                type: [String, RegExp, Function],\n                default: null\n            },\n            sortCompare: {\n                type: Function,\n                default: null\n            },\n            itemsProvider: {\n                // Deprecated in favour of items\n                type: Function,\n                default: null\n            },\n            noProviderPaging: {\n                type: Boolean,\n                default: false\n            },\n            noProviderSorting: {\n                type: Boolean,\n                default: false\n            },\n            noProviderFiltering: {\n                type: Boolean,\n                default: false\n            },\n            busy: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Array,\n                default: () => []\n            },\n            footClone: {\n                type: Boolean,\n                default: false\n            },\n            labelSortAsc: {\n                type: String,\n                default: 'Click to sort Ascending'\n            },\n            labelSortDesc: {\n                type: String,\n                default: 'Click to sort Descending'\n            },\n            showEmpty: {\n                type: Boolean,\n                default: false\n            },\n            emptyText: {\n                type: String,\n                default: 'There are no records to show'\n            },\n            emptyFilteredText: {\n                type: String,\n                default: 'There are no records matching your request'\n            }\n        },\n        watch: {\n            items(newVal, oldVal) {\n                if (oldVal !== newVal) {\n                    this._providerUpdate();\n                }\n            },\n            sortDesc(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderSorting) {\n                    this._providerUpdate();\n                }\n            },\n            sortBy(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderSorting) {\n                    this._providerUpdate();\n                }\n            },\n            perPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            currentPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            filter(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderFiltering) {\n                    this._providerUpdate();\n                }\n            }\n        },\n        mounted() {\n            if (this.hasProvider) {\n                this._providerUpdate();\n            }\n            this.$root.$on('table::refresh', (id) => {\n                if (id === this.id) {\n                    this._providerUpdate();\n                }\n            });\n        },\n        computed: {\n            tableClass() {\n                return [\n                    'table',\n                    'b-table',\n                    this.striped ? 'table-striped' : '',\n                    this.hover ? 'table-hover' : '',\n                    this.inverse ? 'table-inverse' : '',\n                    this.bordered ? 'table-bordered' : '',\n                    this.responsive ? 'table-responsive' : '',\n                    this.small ? 'table-sm' : ''\n                ];\n            },\n            headClass() {\n                return this.headVariant ? 'thead-' + this.headVariant : '';\n            },\n            footClass() {\n                const variant = this.footVariant || this.headVariant || null;\n                return variant ? 'thead-' + variant : '';\n            },\n            hasProvider() {\n                return this.items instanceof Function;\n            },\n            providerFiltering() {\n                return Boolean(this.hasProvider && !this.noProviderFiltering);\n            },\n            providerSorting() {\n                return Boolean(this.hasProvider && !this.noProviderSorting);\n            },\n            providerPaging() {\n                return Boolean(this.hasProvider && !this.noProviderPaging);\n            },\n            context() {\n                return {\n                    perPage: this.perPage,\n                    currentPage: this.currentPage,\n                    filter: this.filter,\n                    sortBy: this.sortBy,\n                    sortDesc: this.sortDesc\n                };\n            },\n            _items() {\n                // Grab some props/data to ensure reactivity\n                const perPage = this.perPage;\n                const currentPage = this.currentPage;\n                const filter = this.filter;\n                const sortBy = this.sortBy;\n                const sortDesc = this.sortDesc;\n                const sortCompare = this.sortCompare || defaultSortCompare;\n\n                let items = this.hasProvider ? this.localItems : this.items;\n\n                if (!items) {\n                    this.$nextTick(this._providerUpdate);\n                    return [];\n                }\n\n                items = items.slice();\n\n                // Apply local filter\n                if (filter && !this.providerFiltering) {\n                    if (filter instanceof Function) {\n                        items = items.filter(filter);\n                    } else {\n                        let regex;\n                        if (filter instanceof RegExp) {\n                            regex = filter;\n                        } else {\n                            regex = new RegExp('.*' + filter + '.*', 'ig');\n                        }\n                        items = items.filter(item => {\n                            const test = regex.test(recToString(item));\n                            regex.lastIndex = 0;\n                            return test;\n                        });\n                    }\n                }\n\n                // Apply local Sort\n                if (this.sortBy && !this.providerSorting) {\n                    items = items.sort((a, b) => {\n                        const r = sortCompare(a, b, this.sortBy);\n                        return this.sortDesc ? r : r * -1;\n                    });\n                }\n\n                // Apply local pagination\n                if (perPage && !this.providerPaging) {\n                    items = items.slice((currentPage - 1) * perPage, currentPage * perPage);\n                }\n\n                // Update the value model with the filtered/sorted/paginated data set\n                this.$emit('input', items);\n                return items;\n            }\n        },\n        methods: {\n            fieldClass(field, key) {\n                return [\n                    field.sortable ? 'sorting' : '',\n                    (field.sortable && this.sortBy === key) ? 'sorting_' + (this.sortDesc ? 'desc' : 'asc') : '',\n                    field.variant ? ('table-' + field.variant) : '',\n                    field.class ? field.class : ''\n                ];\n            },\n            tdClass(field, item, key) {\n                let cellVariant = '';\n                if (item._cellVariants && item._cellVariants[key]) {\n                    cellVariant = (this.inverse ? 'bg-' : 'table-') + item._cellVariants[key];\n                }\n                return [\n                    (field.variant && !cellVariant) ? ((this.inverse ? 'bg-' : 'table-') + field.variant) : '',\n                    cellVariant,\n                    field.class ? field.class : ''\n                ];\n            },\n            rowClass(item) {\n                // Prefer item._rowVariant over deprecated item.state\n                const variant = item._rowVariant || item.state || null;\n                return [\n                    variant ? ((this.inverse ? 'bg-' : 'table-') + variant) : ''\n                ];\n            },\n            rowClicked(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-clicked', item, index);\n            },\n            rowHovered(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-hovered', item, index);\n            },\n            headClicked(e, field, key) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                let sortChanged = false;\n                if (!field.sortable) {\n                    if (this.sortBy) {\n                        this.sortBy = null;\n                        sortChanged = true;\n                    }\n                } else {\n                    if (key === this.sortBy) {\n                        // Change sorting direction on column\n                        this.sortDesc = !this.sortDesc;\n                    } else {\n                        // Start sorting this column descending\n                        this.sortBy = key;\n                        this.sortDesc = true;\n                    }\n                    sortChanged = true;\n                }\n                this.$emit('head-clicked', key, field);\n                if (sortChanged) {\n                    // Sorting parameters changed\n                    this.$emit('sort-changed', this.context);\n                }\n            },\n            refresh() {\n                // Expose refresh method\n                if (this.hasProvider) {\n                    this._providerUpdate();\n                }\n            },\n            _providerSetLocal(items) {\n                this.localItems = (items && items.length > 0) ? items.slice() : [];\n                this.$emit('refreshed');\n                this.$root.$emit('table::refreshed', this.id);\n            },\n            _providerUpdate() {\n                // Refresh the provider items\n                if (this.busy || !this.hasProvider) {\n                    // Don't refresh remote data if we are 'busy' or if no provider\n                    return;\n                }\n\n                // Call provider function with context and optional callback\n                const data = this.items(this.context, this._providerSetLocal);\n\n                if (!data) {\n                    // Provider is using callback\n                    return;\n                }\n\n                if (data.then && typeof data.then === 'function') {\n                    // Provider returned Promise\n                    data.then((items) => {\n                        this._providerSetLocal(items);\n                    });\n                } else {\n                    // Provider returned Array data\n                    this._providerSetLocal(data);\n                }\n            }\n        }\n    };\n</script>\n\n<style>\n    /* Based on https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\n\n    table.b-table > thead > tr > .sorting,\n    table.b-table > tfoot > tr > .sorting {\n        padding-right: 30px;\n        cursor: pointer;\n        position: relative;\n    }\n\n    table.b-table thead > tr > .sorting:before,\n    table.b-table thead > tr > .sorting:after,\n    table.b-table tfoot > tr > .sorting:before,\n    table.b-table thead > tr > .sorting:after {\n        position: absolute;\n        bottom: 0.9em;\n        display: block;\n        opacity: 0.3;\n    }\n\n    table.b-table.table-sm > thead > tr > .sorting:before,\n    table.b-table.table-sm > thead > tr > .sorting:after,\n    table.b-table.table-sm > tfoot > tr > .sorting:before,\n    table.b-table.table-sm > thead > tr > .sorting:after {\n        bottom: 0.45em;\n    }\n\n    table.b-table > thead > tr > .sorting:before,\n    table.b-table > tfoot > tr > .sorting:before {\n        right: 1em;\n        content: \"\\2191\";\n    }\n\n    table.b-table > thead > tr > .sorting:after,\n    table.b-table > tfoot > tr > .sorting:after {\n        right: 0.5em;\n        content: \"\\2193\";\n    }\n\n    table.b-table > thead > tr > .sorting_asc:before,\n    table.b-table > thead > tr > .sorting_desc:after,\n    table.b-table > tfoot > tr > .sorting_asc:before,\n    table.b-table > tfoot > tr > .sorting_desc:after {\n        opacity: 1;\n    }\n\n    /* Busy table styling */\n\n    table.b-table[aria-busy=\"false\"] {\n        opacity: 1;\n    }\n\n    table.b-table[aria-busy=\"true\"] {\n        opacity: .6;\n    }\n</style>\n","<template>\n    <component :is=\"tag\" :id=\"id || null\" class=\"tabs\">\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n\n        <div :class=\"{'card-header': card}\">\n            <ul :class=\"['nav','nav-' + navStyle, card ? 'card-header-'+navStyle : null]\"\n                role=\"tablist\"\n                tabindex=\"0\"\n                :aria-setsize=\"tabs.length\"\n                :aria-posinset=\"currentTab + 1\"\n                @keydown.left=\"previousTab\"\n                @keydown.up=\"previousTab\"\n                @keydown.right=\"nextTab\"\n                @keydown.down=\"nextTab\"\n                @keydown.shift.left=\"setTab(-1,false,1)\"\n                @keydown.shift.up=\"setTab(-1,false,1)\"\n                @keydown.shift.right=\"setTab(tabs.length,false,-1)\"\n                @keydown.shift.down=\"setTab(tabs.length,false,-1)\"\n            >\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\" role=\"presentation\">\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                       :href=\"tab.href\"\n                       role=\"tab\"\n                       :aria-selected=\"tab.localActive ? 'true' : 'false'\"\n                       :aria-controls=\"tab.id || null\"\n                       :id=\"tab.controlledBy || null\"\n                       @click.prevent.stop=\"setTab(index)\"\n                       @keydown.space.prevent.stop=\"setTab(index)\"\n                       @keydown.enter.prevent.stop=\"setTab(index)\"\n                       tabindex=\"-1\"\n                       v-if=\"!tab.headHtml\"\n                       v-html=\"tab.title\"\n                    ></a>\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                         role=\"heading\"\n                         tabindex=\"-1\"\n                         v-else\n                         v-html=\"tab.headHtml\"></div>\n                </li>\n                <slot name=\"tabs\"></slot>\n            </ul>\n        </div>\n\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n    </component>\n</template>\n\n<script>\n    import observeDom from '../utils/observe-dom';\n\n    export default {\n        data() {\n            return {\n                currentTab: this.value,\n                tabs: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            card: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            pills: {\n                type: Boolean,\n                default: false\n            },\n            lazy: {\n                type: Boolean,\n                default: false\n            },\n            bottom: {\n                type: Boolean,\n                default: false\n            }\n        },\n        watch: {\n            currentTab(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\n                this.$emit('input', val);\n                this.tabs[val].$emit('click');\n            },\n            value(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.setTab(val);\n            },\n            fade(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.tabs.forEach(item => {\n                    this.$set(item, 'fade', val);\n                });\n            }\n        },\n        computed: {\n            fade() {\n                return !this.noFade;\n            },\n            navStyle() {\n                return this.pills ? 'pills' : 'tabs';\n            }\n        },\n        methods: {\n            /**\n             * Util: Return the sign of a number (as -1, 0, or 1)\n             */\n            sign(x) {\n                return (x === 0) ? 0 : (x > 0 ? 1 : -1);\n            },\n\n            /**\n             * Move to next tab\n             */\n            nextTab() {\n                this.setTab(this.currentTab, false, 1);\n            },\n\n            /**\n             * Move to previous tab\n             */\n            previousTab() {\n                this.setTab(this.currentTab, false, -1);\n            },\n\n            /**\n             * Set active tab on the tabs collection and the child 'tab' component\n             */\n            setTab(index, force, offset) {\n                offset = offset || 0;\n\n                // Prevent setting same tab!\n                if (!force && (index + offset) === this.currentTab) {\n                    return;\n                }\n\n                const tab = this.tabs[index + offset];\n\n                // Don't go beyond indexes!\n                if (!tab) {\n                    return;\n                }\n\n                // Ignore or Skip disabled\n                if (tab.disabled) {\n                    if (offset) {\n                        // Skip to next non disabled tab in offset direction (recursive)\n                        this.setTab(index, force, offset + this.sign(offset));\n                    }\n                    return;\n                }\n\n                // Deactivate any previous active tab(s)\n                this.tabs.forEach( t => {\n                    if (t !== tab && t.localActive) {\n                        this.$set(t, 'localActive', false);\n                    }\n                });\n\n                // Set new tab as active\n                this.$set(tab, 'localActive', true);\n\n                // Update currentTab\n                this.currentTab = index + offset;\n            },\n\n            /**\n             * Dynamically update tabs\n             */\n            updateTabs() {\n                // Probe tabs\n                if (this.$slots.default) {\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\n                        .map(tab => tab.componentInstance);\n                } else {\n                    this.tabs = [];\n                }\n\n                this.tabs.forEach(tab => {\n                    this.$set(tab, 'fade', this.fade);\n                    this.$set(tab, 'lazy', this.lazy);\n                });\n\n                // Get initial active tab\n                let tabIndex = this.currentTab;\n\n                if (tabIndex === null || tabIndex === undefined) {\n                    // Find last active tab in current tabs\n                    this.tabs.forEach((tab, index) => {\n                        if (tab.active) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                // Workaround to fix problem when currentTab is removed\n                let offset = 0;\n                if (tabIndex > this.tabs.length - 1) {\n                    offset = -1;\n                }\n\n                this.setTab(tabIndex || 0, true, offset);\n            }\n        },\n        mounted() {\n            this.updateTabs();\n\n            // Observe Child changes so we can notify tabs change\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\n        }\n    };\n\n</script>\n","<template>\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\n        <component :is=\"tag\"\n                   :id=\"id || null\"\n                   role=\"tabpanel\"\n                   :class=\"['tab-pane', {show, fade, disabled, active: localActive}]\"\n                   :aria-hidden=\"localActive ? 'false' : 'true'\"\n                   :aria-expanded=\"localActive ? 'true' : 'false'\"\n                   :aria-lablelledby=\"controlledBy || null\"\n                   v-if=\"localActive || !lazy\"\n                   v-show=\"localActive || lazy\"\n                   ref=\"panel\"\n        >\n             <slot></slot>\n        </component>\n    </transition>\n</template>\n\n<script>\n    export default {\n        methods: {\n            enter() {\n                this.show = true;\n            },\n            beforeLeave() {\n                this.show = false;\n            }\n        },\n        data() {\n            return {\n                fade: false,\n                localActive: false,\n                lazy: true,\n                show: false\n            };\n        },\n        computed: {\n            controlledBy() {\n                return this.buttonId || (this.id ? (this.id + '__BV_tab_button__') : null);\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            buttonId: {\n                type: String,\n                default: ''\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            headHtml: {\n                type: String,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            href: {\n                type: String,\n                default: '#'\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['tooltip','tooltip-' + this.placement]\"\n             :style=\"{opacity:showState?1:0}\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import popover from '../mixins/popover';\n\n    export default {\n        mixins: [popover],\n        props: {\n            content: {\n                type: String,\n                default: ''\n            },\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","const inBrowser = typeof window !== 'undefined';\n\nimport target from './_target';\n\nconst listen_types = {click: true};\n\nexport default {\n    bind(el, binding) {\n        const targets = target(el, binding, listen_types, ({targets, vm}) => {\n            targets.forEach(target => {\n                vm.$root.$emit('collapse::toggle', target);\n            });\n        });\n        if (inBrowser && el.__vue__ && targets.length > 0) {\n            el.setAttribute('aria-controls', targets.join(' '));\n            el.setAttribute('aria-expanded', 'false');\n            el.__vue__.$root.$on('collapse::toggle::state', (id, state) => {\n                if (targets.indexOf(id) !== -1) {\n                    el.setAttribute('aria-expanded', state ? 'true' : 'false');\n                }\n            });\n        }\n    }\n};\n","import target from './_target';\n\nconst listen_types = {click: true};\n\nexport default {\n    bind(el, binding) {\n        target(el, binding, listen_types, ({targets, vm}) => {\n            targets.forEach(target => {\n                vm.$root.$emit('show::modal', target, el);\n            });\n        });\n    }\n};\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["isVisible","el","offsetWidth","offsetHeight","observeDOM","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","obs","mutations","addedNodes","length","removedNodes","observe","Object","assign","childList","subtree","targets","binding","listen_types","fn","vm","__vue__","console","warn","keys","modifiers","filter","t","all_listen_types","value","push","listener","forEach","type","isElement","obj","nodeType","closest","element","selector","$QSA","document","Array","prototype","slice","call","querySelectorAll","$QS","querySelector","getVm","toType","toString","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","hasOwnProperty","expectedTypes","valueType","RegExp","test","error","ScrollSpy","this","_$el","_selector","Selector","NAV_LINKS","LIST_ITEMS","DROPDOWN_ITEMS","join","_config","Default","_offsets","_targets","_activeTarget","_scrollHeight","_$root","_resizeTimeout","updateConfig","render","data","countDownTimerId","dismissed","created","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","props","String","default","Boolean","dismissLabel","Number","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","let","dismissCountDown","setInterval","isRouterLink","$router","to","disabled","_href","href","computedRel","target","rel","linkClassObject","active","exact","exactActiveClass","activeClass","tag","append","replace","event","linkClick","e","stopPropagation","$root","preventDefault","mixins","linkMixin","components","bLink","componentType","normalizedItems","userDefinedActive","originalItemsLength","items","map","item","index","isLast","text","link","required","ariaCurrent","onClick","classList","btnVariant","btnSize","btnBlock","btnDisabled","block","size","onclick","ITEM_SELECTOR","justify","vertical","KeyNav","setItemFocus","$nextTick","focus","focusNext","prev","keyNav","getItems","indexOf","focusFirst","focusLast","$el","tabIndex","documentElement","_clickOutListener","destroyed","removeEventListener","contains","clickOutListener","HEADER_SELECTOR","ALL_SELECTOR","split","dropup","right","visible","$on","old","children","body","noop","toggle","getFirstItem","focusItem","onTab","onEsc","$refs","button","up","focusHovered","idx","i","add","remove","menu","clickOut","dropdown","dropdownToggle","caret","id","left","blockClass","overlay","cardVariant","cardInverse","inverse","cardAlign","align","header","headerVariant","headerClass","headerTag","footer","footerVariant","footerClass","footerTag","title","subTitle","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","isSliding","slides","labelPrev","labelNext","labelGotoSlide","labelIndicators","interval","indicators","controls","height","background","visibilityState","hidden","pause","_intervalId","start","slide","restart","relatedTarget","self","n","setAttribute","val","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","setTimeout","clearTimeout","contentVisibleUp","caption","contentClasses","classes","carousel-caption","navbar-collapse","isNav","model","prop","newVal","emitState","accordion","enter","style","realHeight","getComputedStyle","leave","clearHeight","openedId","bButton","toggleText","click","selected","displayItem","returnObject","forceDefault","defaultText","result","list","position","select","hub","inline","labelId","label","descriptionId","description","feedbackId","feedback","describedBy","inputState","labelLayout","labelSrOnly","horizontal","labelSize","labelAlignClass","labelTextAlign","inputLayout","updateTarget","for","content","input","inputSelector","updated","inputClass","custom","plain","name","checkboxClass","custom-control","form-check-inline","formMixin","formCheckBoxMixin","uncheckedValue","checked","isChecked","isArray","includes","handleChange","ref","x","formOptions","options","option","valueField","textField","selectedValue","localValue","old_value","formOptionsMixin","stacked","staticValue","formatter","Function","bFormInputStatic","rowsCount","format","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","static","placeholder","rows","textarea","selectedFile","dragging","selectedLabel","multiple","selectedFormat","file","computedChooseLabel","chooseLabel","onFileChange","dataTransfer","noTraverse","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","setFiles","concat","apply","files","filesArray","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","action","myTag","verticalAlignClass","verticalAlign","rightAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","hide","noFade","noCloseOnBackdrop","noCloseOnEsc","hideHeader","hideFooter","okOnly","okDisabled","hideHeaderClose","closeTitle","okTitle","enforceFocus","isOK","canceled","cancel","returnFocusTo","onClickOut","activeElement","triggerEl","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","toggleState","fixed","sticky","toggleable","toggleableClass","className","toggleBreakpoint","bForm","diff","showPrev","showNext","currentPage","numberOfPages","Math","ceil","totalRows","perPage","pageLinks","limit","isActive","page","setPage","num","focusCurrent","getButtons","buttons","btn","setBtnFocus","find","reverse","parseInt","getAttribute","focusPrev","cnt","_return","newPage","oldPage","newValue","oldValue","ariaLabel","labelPrevPage","labelNextPage","labelPage","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","TETHER_CLASS_PREFIX","TETHER_CLASSES","enabled","TRANSITION_DURATION","constraints","debounce","validator","delay","offset","placement","popoverStyle","targetOffset","triggers","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","getDelay","$data","_timeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","timeStamp","getTetherOptions","attachment","_popover","classPrefix","hidePopover","display","refreshPosition","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","beforeDestroy","parentElement","removeChild","progressVariant","striped","animated","styleObject","width","progress","p","pow","precision","round","max","showProgress","showValue","v","k","recToString","exclude","_rowVariant","reduce","o","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","sortDesc","localItems","itemsProvider","fields","bordered","small","responsive","headVariant","footVariant","sortCompare","noProviderPaging","noProviderSorting","noProviderFiltering","busy","footClone","labelSortAsc","labelSortDesc","showEmpty","emptyText","emptyFilteredText","_providerUpdate","hasProvider","tableClass","headClass","footClass","providerFiltering","providerSorting","providerPaging","context","_items","regex","lastIndex","sort","r","fieldClass","field","key","sortable","class","tdClass","cellVariant","_cellVariants","rowClass","rowClicked","rowHovered","headClicked","sortChanged","refresh","_providerSetLocal","currentTab","card","lazy","setTab","fade","$set","navStyle","sign","nextTab","previousTab","force","tab","localActive","updateTabs","$slots","componentInstance","observeDom","tabsContainer","bind","beforeLeave","controlledBy","buttonId","headHtml","inBrowser","isServer","Element","s","matches","ownerDocument","NAME","EVENT","BVSS","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","DROPDOWN_TOGGLE","NAV_LINK","LIST_ITEM","ACTIVE","NAV_LIST_GROUP","NAV","LIST_GROUP","DROPDOWN","OffsetMethod","OFFSET","POSITION","arg","listen","scroller","_getScroller","tagName","unListen","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","charAt","bcr","getBoundingClientRect","offsetTop","process","scrollTop","scrollHeight","maxScroll","_getOffsetHeight","_activate","_clear","isActiveTarget","dispose","handleEvent","resizeThrottle","pageYOffset","innerHeight","queries","links","_setActiveState","_setParentsSiblingActiveState","$props","previousElementSibling","inserted","update","componentUpdated","unbind","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}